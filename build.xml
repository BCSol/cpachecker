<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="build" name="CPAchecker" xmlns:ivy="antlib:org.apache.ivy.ant">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <antversion property="ant.version.exact"/> <!-- Define property that contains the Ant version. -->
	
    <path id="CPAchecker.classpath">
        <pathelement location="bin"/>
        <fileset dir="lib" includes="eclipse/*.jar"/>
        <fileset dir="lib" includes="ivy/runtime/*.jar"/>
        <fileset dir="lib" includes="ivy/test/*.jar"/>
        <fileset dir="lib" includes="*.jar"/>
    </path>
    <condition property="architecture" value="x86_64" else="x86">
        <os arch="amd64"/>
    </condition>
    <condition property="os" value="linux">
        <os name="Linux"/>
    </condition>
    <condition property="os" value="win32">
        <os family="windows"/>
    </condition>
    <target name="init">
        <mkdir dir="bin"/>
	<!-- seems not to be necessary
	<copy includeemptydirs="false" todir="bin">
            <fileset dir="src" excludes="**/*.launch, **/*.java"/>
	</copy>
	-->
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
	
    <property name="ivy.version" value="2.2.0"/> <!-- Change version number here to use a newer version of Ivy. -->
    <property name="ivy.lib.dir" value="${basedir}/lib/ivy"/>
    <property name="ivy.jar.dir" value="${ivy.lib.dir}/build"/>
    <property name="ivy.jar.file" value="ivy.jar"/>
    <available file="${ivy.jar.dir}/${ivy.jar.file}" property="ivy.jar.present"/>
    <available file="${ivy.lib.dir}-contrib" property="ivy.contrib.present"/>
	
    <!-- If necessary, download Ivy from web site so that it does not need to be installed. -->
    <target name="bootstrap-ivy" unless="ivy.jar.present">
    	<mkdir dir="${ivy.jar.dir}"/>
    	<echo message="Downloading ivy..."/>
        <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar" dest="${ivy.jar.dir}/${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <!-- Load the Ivy plugin for Ant so the Ivy tasks are available. -->
    <target name="load-ivy" depends="bootstrap-ivy">
    	<path id="ivy.lib.path">
    	    <fileset dir="${ivy.jar.dir}" includes="${ivy.jar.file}"/>
    	</path>
    	<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>
	
    <!-- Ask Ivy to get all the dependencies for us -->
    <target name="resolve-dependencies" depends="load-ivy, update-contrib">
        <echo message="Downloading and installing dependencies with Ivy..."/>
        <ivy:resolve conf="build, runtime, test"/>
        <ivy:retrieve sync="true" overwriteMode="different" pattern="${ivy.lib.dir}/[conf]/[artifact](-[classifier]).[ext]"/>
    </target>

    <target name="report-dependencies" depends="resolve-dependencies" description="Generate dependencies report">
        <ivy:report graph="false" dot="true" conf="runtime, build, test, contrib"/>
    </target>

    <!-- Update additional resources if they were downloaded previously. -->
    <target name="update-contrib" if="ivy.contrib.present">
        <antcall target="contrib"/>
    </target>
        
    <target name="contrib" depends="load-ivy" description="retrieve sources and docs for external libraries">
        <ivy:resolve conf="contrib"/>
        <ivy:retrieve sync="true" pattern="${ivy.lib.dir}-contrib/[artifact](-[classifier]).[ext]"/>
    </target>
        	
    <target depends="resolve-dependencies,build-subprojects,build-project,build-documentation" name="build"/>
    
    <target name="build-subprojects">
	    <echo message="Generate automaton parser if necessary" level="info"/>
	    <ant antfile="src/org/sosy_lab/cpachecker/cpa/automaton/AutomatonBuild.xml" inheritAll="false"/>
	    <echo message="Generate FQL parser if necessary" level="info"/>
	    <ant antfile="src/org/sosy_lab/cpachecker/fshell/fql2/parser/build.xml" inheritAll="false"/>
    </target>

    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}" encoding="UTF-8">
            <src path="src"/>
	    <exclude name="org/sosy_lab/cpachecker/cpaplugin/**"/>
            <classpath refid="CPAchecker.classpath"/>
        </javac>
    </target>

    <property name="outputfile" value="doc/ConfigurationOptions.txt"/>
    <uptodate property="documentation.uptodate" targetfile="${outputfile}">
      <srcfiles dir="src" includes="**/*.java"/>
    </uptodate>

    <target name="build-documentation" depends="build-project" unless="documentation.uptodate">
        <echo message="running OptionCollector..." level="info"/>

        <echo file="${outputfile}" append="false" message="# This is an auto-generated file, DO NOT EDIT!${line.separator}# Run ant to generate it.${line.separator}"/>
        <!-- the output of OptionCollector is written into "doc/ConfigurationOptions.txt" -->
        <java classname="org.sosy_lab.common.configuration.OptionCollector"
            fork="true"
            output="${outputfile}" append="true"
            logError="true">

            <classpath refid="CPAchecker.classpath"/>
            <jvmarg value="-Djava.library.path=lib/native/${architecture}-${os}/"/>

            <!-- "-v" is a optional param for verbose output of OptionCollector -->
            <!-- <arg value="-v"/> -->
        </java>
        <echo message="Options collected." level="info"/>
    </target>

    <!-- Load the JUnit plugin for Ant if it's not installed. -->
    <condition property="ant.junit.available">
        <typefound name="junit"/>
    </condition>
    <target name="load-junit" depends="resolve-dependencies" unless="ant.junit.available">
    	<taskdef name="junit"
    	         classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"
    	         classpath="${ivy.jar.dir}/ant-junit.jar"/>
    </target>
        
    <target description="Run all JUnit tests" depends="build, load-junit" name="tests">
        <property name="test.report.dir" value="test/output"/>
        <mkdir dir="${test.report.dir}"/>
        <junit fork="true" printSummary="true" showOutput="false">
            <assertions>
            <enable /> <!-- some assertions fail currently (March 11 2010) -->
            </assertions>
            <formatter type="plain"/>
            <classpath refid="CPAchecker.classpath"/>
            <batchtest fork="true" todir="${test.report.dir}">
                <fileset dir="${basedir}/bin">
                    <include name="**/*Test.*"/>
                    <exclude name="**/*$*Test.*"/>
		    <exclude name="org/sosy_lab/cpachecker/util/octagon/OctLibraryTest.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

</project>
