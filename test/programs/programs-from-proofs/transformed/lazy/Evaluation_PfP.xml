<?xml version="1.0"?>
<!DOCTYPE benchmark PUBLIC "+/IDN sosy-lab.org/DTD BenchExec benchmark 1.0/EN" "http:/www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="cpachecker" timelimit="1000" cpuCores="2"><!--memlimit="15 GB">-->
  <option name="-disable-java-assertions"/>
  <option name="-heap">5000M</option>
  <option name="-noout"/>
  <option name="-nolog"/>
  <option name="-setprop">statistics.memory=false</option>
  
  <option name="-setprop">analysis.postProcessing=false</option>
  <option name="-setprop">cpa.apron.splitDisequalities=false</option>
  <option name="-setprop">solver.solver=MATHSAT5</option>
  <option name="-setprop">cfa.useMultiEdges=false</option>

<rundefinition name="CPA1+CPA2_Analysis">
	<option name="-setprop">enabledanalysis.allowLazyRefinement=false</option>	
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>locks.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>token_ring.03.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>s3_srvr.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>token_ring.02.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>token_ring.04.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.03.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>s3_srvr.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.01.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.02.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>pipeline.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>s3_srvr.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>cdaudio.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>pipeline2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>pipeline.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>cdaudio.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>diskperf.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>pipeline.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>s3_srvr.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>cdaudio.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>pipeline2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks7.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_7.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>test_locks_8.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
      <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>inf4.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>inf8.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>propertyInFlag.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>SubMinSumDiv.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESP.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPa.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPc.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>addIterations.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLR.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf6.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf8.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>PfPb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>PfPc.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>ESP.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>lockfree-3.1.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>test_locks_6.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf8.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>encode_ie_interproc.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_SpamAssassin.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SpamAssassin.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_sendmail_fromqp.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>sendmail_fromqp.cil.c</include>
	</tasks>	
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>invert_string.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>fibonacci.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>relax_simple.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf6.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.02.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.01.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.02.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>powerof2approx.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>test_locks_5.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>test_locks_12d.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5d.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>relax_simple.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>fibonacci.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>palindrom.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>invert_array.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>invert_sorted.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	   <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>div.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>palindrom.c</include>
	</tasks>
  </rundefinition>

<!--<rundefinition name="CPA1+CPA2_Analysis regression">
	<option name="-setprop">enabledanalysis.allowLazyRefinement=false</option>
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>locks.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/locks_PLMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/token_ring.03_PLMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/mem_slave_tlm.1_PLMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/s3_srvr_PLMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/token_ring.02_VLMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/token_ring.04_VLMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/transmitter.03_VLMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/s3_srvr_ALMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/transmitter.01_ALMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/transmitter.02_ALMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/cdaudio_PUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/pipeline2_PUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/diskperf_PUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/pipeline_AUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/s3_srvr_AUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/pipeline2_AUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/s3_srvr_VUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/cdaudio_VUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/pipeline2_VUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/pipeline_PUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/cdaudio_PUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/diskperf_PUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/pipeline_AUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/pipeline2_AUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/s3_srvr_AUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/s3_srvr_VUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/cdaudio_VUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/pipeline2_VUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/condsum_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/propertInFlag_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/PfP_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/PfPb_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/PfPc_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/list_statistics_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/harmonicMean_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/fraction_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/SLR_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/fac_negsum_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/SubMinSumDiv_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/lockfree-3.0_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks7.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_7.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_7_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>test_locks_8.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_8_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
      <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>inf4.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/inf4_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/inf8_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/propertyInFlag_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/SLRb_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/SubMinSumDiv_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESP.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/ESP_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPa.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/ESPa_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/ESPb_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPc.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/ESPc_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>addIterations.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/addIterations_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/SLRb_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLR.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/SLR_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/inf6_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/inf8_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/kundu_uninit_b_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/mem_slave_tlm.1_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/mem_slave_tlm.2_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/PfPb_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/PfPc_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>ESP.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/ESP_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
          <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/ESPb_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/lockfree-3.1_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/test_locks_5_PVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/kbfiltr_simpl1_PVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/kbfiltr_simpl2_PVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/test_locks_5d_PVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/test_locks_12_PVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/test_locks_12d_PVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/mem_slave_tlm.1_AVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/mem_slave_tlm.2_AVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>test_locks_6.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_6_AVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/kbfiltr_simpl1_AVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/kbfiltr_simpl2_AVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/inf8_AVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/encode_ie_nosprintf_PIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/encode_ie_interproc_PIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/NetBSD_anyMeta_PIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/PfPb_PIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/PfP_PIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/SLRb_PIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/encode_ie_interproc_AIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_SpamAssassin.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SpamAssassin.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/SpamAssassin_AIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_sendmail_fromqp.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>sendmail_fromqp.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/sendmail_fromqp_AIDFA_init.txt</option>
	</tasks>	
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>invert_string.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/invert_string_AIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/fibonacci_AIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/relax_simple_AIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/mem_slave_tlm.1_PVpDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/mem_slave_tlm.2_PVpDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/kbfiltr_simpl2_PVpDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/test_locks_6_PVpDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/initPrec/initValPrec_ntdrivers.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/kbfiltr_simpl1_AVpDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_5_AVpDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_5d_AVpDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/kundu_uninit_b_PSMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/transmitter.01_PSMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/transmitter.02_PSMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/inf6_VSMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/kundu_uninit_b_VSMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/transmitter.02_VSMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/transmitter.01_ASMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/transmitter.02_ASMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>powerof2approx.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/powerof2approx_ASMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/test_locks_5d_PVMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/inf1_PVMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_5_AVMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_12d_AVMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_5d_AVMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/test_locks_5_PVpMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/encode_ie_interproc_PVpMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/encode_ie_nosprintf_PVpMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_5d_AVpMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/relax_simple_AVpMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/encode_ie_nosprintf_AVpMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/invert_sorted_PISDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/div_PISDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/fibonacci_PISDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/fibonacci_AISDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/palindrom_AISDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/invert_array_AISDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/fibonacci_PISJS_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/palindrom_PISJS_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/invert_array_PISJS_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/invert_sorted_AISJS_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	   <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>div.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/div_AISJS_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/palindrom_AISJS_init.txt</option>
	</tasks>
  </rundefinition>
-->
<!--<rundefinition name="CPA1+CPA2_Analysis arg">
	 <option name="-setprop">analysis.algorithm.proofCheck=true</option>
        <option name="-setprop">cpa.callstack.domain=FLATPCC</option>
        <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
        <option name="-setprop">PropertyCheckerCPA.cpa=cpa.arg.ARGCPA</option>
        <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
        <option name="-setprop">cpa.predicate.stop=SEPPCC</option>
        <option name="-setprop">cpa.predicate.satCheckAtAbstraction=true</option>
        <option name="-setprop">cpa.apron.initialPrecisionType=STATIC_FULL</option>
        <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>	
        <option name="-stack">51200k</option>
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  
	  <include>locks.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/locks_PLMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/token_ring.03_PLMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/mem_slave_tlm.1_PLMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/s3_srvr_PLMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/token_ring.02_VLMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/token_ring.04_VLMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/transmitter.03_VLMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/s3_srvr_ALMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/transmitter.01_ALMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/transmitter.02_ALMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/cdaudio_PUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/pipeline2_PUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/diskperf_PUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/pipeline_AUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/s3_srvr_AUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/pipeline2_AUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/s3_srvr_VUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/cdaudio_VUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/pipeline2_VUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/pipeline_PUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/cdaudio_PUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/diskperf_PUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/pipeline_AUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/pipeline2_AUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/s3_srvr_AUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/s3_srvr_VUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/cdaudio_VUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/pipeline2_VUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/condsum_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/propertInFlag_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/PfP_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/PfPb_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/PfPc_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/list_statistics_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/harmonicMean_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/fraction_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/SLR_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/fac_negsum_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/SubMinSumDiv_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/lockfree-3.0_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks7.spc</option>
	  
	  <include>test_locks_7.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_7_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks8.spc</option>
	  
	  <include>test_locks_8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_8_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
      
	  <include>inf4.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/inf4_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/inf8_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/propertyInFlag_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/SLRb_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/SubMinSumDiv_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/ESP_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESPa.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/ESPa_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/ESPb_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/ESPc_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  
	  <include>addIterations.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/addIterations_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/SLRb_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/SLR_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/inf6_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/inf8_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kundu_uninit_b_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/mem_slave_tlm.1_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/mem_slave_tlm.2_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/PfPb_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/PfPc_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/ESP_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/ESPb_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/lockfree-3.1_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5_PVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kbfiltr_simpl1_PVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kbfiltr_simpl2_PVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5d_PVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_12_PVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_12d_PVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/mem_slave_tlm.1_AVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/mem_slave_tlm.2_AVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_6_AVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kbfiltr_simpl1_AVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kbfiltr_simpl2_AVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf8.spc</option>
	  
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/inf8_AVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/encode_ie_nosprintf_PIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/encode_ie_interproc_PIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/NetBSD_anyMeta_PIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/PfPb_PIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/PfP_PIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/SLRb_PIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/encode_ie_interproc_AIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_SpamAssassin.spc</option>
	  
	  <include>SpamAssassin.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/SpamAssassin_AIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_sendmail_fromqp.spc</option>
	  
	  <include>sendmail_fromqp.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/sendmail_fromqp_AIDFA_arg.obj</option>
	</tasks>	
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  
	  <include>invert_string.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/invert_string_AIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/fibonacci_AIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/relax_simple_AIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/mem_slave_tlm.1_PVpDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/mem_slave_tlm.2_PVpDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kbfiltr_simpl2_PVpDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_6_PVpDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	  
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kbfiltr_simpl1_AVpDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5_AVpDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5d_AVpDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  
	 
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kundu_uninit_b_PSMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	 
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/transmitter.01_PSMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	 
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/transmitter.02_PSMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	 
	  
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/inf6_VSMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	 
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kundu_uninit_b_VSMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	 
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/transmitter.02_VSMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	 
	  
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/transmitter.01_ASMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	 
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/transmitter.02_ASMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	 
	  
	  <include>powerof2approx.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/powerof2approx_ASMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	 
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5d_PVMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  
	 
	  <include>inf1.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/inf1_PVMC_arg.obj</option>
	</tasks>
	
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	 
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5_AVMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	 
	  
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_12d_AVMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	 
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5d_AVMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	 
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5_PVpMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	 
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/encode_ie_interproc_PVpMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	 
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/encode_ie_nosprintf_PVpMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	 
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5d_AVpMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	 
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/relax_simple_AVpMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	 
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/encode_ie_nosprintf_AVpMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/invert_sorted_PISDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/div_PISDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/fibonacci_PISDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/fibonacci_AISDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/palindrom_AISDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/invert_array_AISDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  
	 
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/fibonacci_PISJS_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	 
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/palindrom_PISJS_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	 
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/invert_array_PISJS_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	 
	  
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/invert_sorted_AISJS_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  
	  <include>div.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/div_AISJS_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	 
	  
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/palindrom_AISJS_arg.obj</option>
	</tasks>
  </rundefinition>

<rundefinition name="CPA1+CPA2_Analysis reached">
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
        <option name="-setprop">cpa.callstack.domain=FLATPCC</option>
        <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
        <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
        <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
        <option name="-setprop">cpa.predicate.stop=SEPPCC</option>
        <option name="-setprop">cpa.predicate.satCheckAtAbstraction=true</option>
        <option name="-setprop">cpa.apron.initialPrecisionType=STATIC_FULL</option>
        <option name="-setprop">pcc.strategy=ReachedSetStrategy</option>	
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  
	  <include>locks.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/locks_PLMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/token_ring.03_PLMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/mem_slave_tlm.1_PLMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/s3_srvr_PLMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/token_ring.02_VLMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/token_ring.04_VLMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/transmitter.03_VLMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/s3_srvr_ALMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/transmitter.01_ALMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/transmitter.02_ALMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/cdaudio_PUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/pipeline2_PUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/diskperf_PUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/pipeline_AUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/s3_srvr_AUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/pipeline2_AUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/s3_srvr_VUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/cdaudio_VUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/pipeline2_VUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/pipeline_PUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/cdaudio_PUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/diskperf_PUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/pipeline_AUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/pipeline2_AUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/s3_srvr_AUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/s3_srvr_VUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/cdaudio_VUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/pipeline2_VUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/condsum_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/propertInFlag_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/PfP_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/PfPb_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/PfPc_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/list_statistics_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/harmonicMean_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/fraction_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/SLR_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/fac_negsum_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/SubMinSumDiv_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/lockfree-3.0_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks7.spc</option>
	  
	  <include>test_locks_7.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_7_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks8.spc</option>
	  
	  <include>test_locks_8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_8_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
      
	  <include>inf4.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/inf4_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/inf8_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/propertyInFlag_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/SLRb_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/SubMinSumDiv_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/ESP_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESPa.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/ESPa_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/ESPb_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/ESPc_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  
	  <include>addIterations.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/addIterations_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/SLRb_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/SLR_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/inf6_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/inf8_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kundu_uninit_b_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/mem_slave_tlm.1_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/mem_slave_tlm.2_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/PfPb_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/PfPc_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/ESP_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/ESPb_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/lockfree-3.1_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5_PVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kbfiltr_simpl1_PVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kbfiltr_simpl2_PVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5d_PVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_12_PVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_12d_PVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/mem_slave_tlm.1_AVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/mem_slave_tlm.2_AVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_6_AVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kbfiltr_simpl1_AVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kbfiltr_simpl2_AVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf8.spc</option>
	  
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/inf8_AVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/encode_ie_nosprintf_PIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/encode_ie_interproc_PIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/NetBSD_anyMeta_PIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/PfPb_PIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/PfP_PIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/SLRb_PIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/encode_ie_interproc_AIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_SpamAssassin.spc</option>
	  
	  <include>SpamAssassin.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/SpamAssassin_AIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_sendmail_fromqp.spc</option>
	  
	  <include>sendmail_fromqp.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/sendmail_fromqp_AIDFA_reached.obj</option>
	</tasks>	
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  
	  <include>invert_string.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/invert_string_AIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/fibonacci_AIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/relax_simple_AIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/mem_slave_tlm.1_PVpDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/mem_slave_tlm.2_PVpDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kbfiltr_simpl2_PVpDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_6_PVpDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	  
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kbfiltr_simpl1_AVpDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5_AVpDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5d_AVpDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kundu_uninit_b_PSMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	  
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/transmitter.01_PSMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/transmitter.02_PSMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  
	  
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/inf6_VSMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kundu_uninit_b_VSMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/transmitter.02_VSMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	  
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/transmitter.01_ASMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/transmitter.02_ASMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  
	  
	  <include>powerof2approx.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/powerof2approx_ASMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5d_PVMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  
	  
	  <include>inf1.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/inf1_PVMC_reached.obj</option>
	</tasks>
	
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5_AVMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_12d_AVMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5d_AVMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5_PVpMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/encode_ie_interproc_PVpMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/encode_ie_nosprintf_PVpMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5d_AVpMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/relax_simple_AVpMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/encode_ie_nosprintf_AVpMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/invert_sorted_PISDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/div_PISDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/fibonacci_PISDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/fibonacci_AISDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/palindrom_AISDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/invert_array_AISDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  
	  
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/fibonacci_PISJS_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/palindrom_PISJS_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/invert_array_PISJS_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/invert_sorted_AISJS_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	   
	  <include>div.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/div_AISJS_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/palindrom_AISJS_reached.obj</option>
	</tasks>
  </rundefinition>

<rundefinition name="CPA1+CPA2_Analysis partial partitioned">
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
        <option name="-setprop">cpa.callstack.domain=FLATPCC</option>
        <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
        <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
        <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
        <option name="-setprop">cpa.predicate.stop=SEPPCC</option>
        <option name="-setprop">cpa.predicate.satCheckAtAbstraction=true</option>
        <option name="-setprop">cpa.apron.initialPrecisionType=STATIC_FULL</option>
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <include>locks.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/locks_PLMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/token_ring.03_PLMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/mem_slave_tlm.1_PLMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/s3_srvr_PLMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/token_ring.02_VLMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/token_ring.04_VLMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/transmitter.03_VLMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/s3_srvr_ALMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/transmitter.01_ALMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/transmitter.02_ALMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/cdaudio_PUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/pipeline2_PUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/diskperf_PUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/pipeline_AUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/s3_srvr_AUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/pipeline2_AUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/s3_srvr_VUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/cdaudio_VUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/pipeline2_VUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/pipeline_PUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/cdaudio_PUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/diskperf_PUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/pipeline_AUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/pipeline2_AUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/s3_srvr_AUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/s3_srvr_VUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/cdaudio_VUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/pipeline2_VUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/condsum_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/propertInFlag_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/PfP_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/PfPb_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/PfPc_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/list_statistics_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/harmonicMean_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/fraction_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/SLR_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/fac_negsum_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/SubMinSumDiv_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/lockfree-3.0_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks7.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>test_locks_7.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_7_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks8.spc</option>
	 <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option> 
	  <include>test_locks_8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_8_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
      <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>inf4.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/inf4_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/inf8_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/propertyInFlag_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/SLRb_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/SubMinSumDiv_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/ESP_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>ESPa.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/ESPa_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/ESPb_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>ESPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/ESPc_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>addIterations.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/addIterations_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/SLRb_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/SLR_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/inf6_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/inf8_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kundu_uninit_b_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/mem_slave_tlm.1_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/mem_slave_tlm.2_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/PfPb_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/PfPc_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/ESP_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/ESPb_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/lockfree-3.1_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5_PVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kbfiltr_simpl1_PVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kbfiltr_simpl2_PVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5d_PVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_12_PVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_12d_PVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/mem_slave_tlm.1_AVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/mem_slave_tlm.2_AVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_6_AVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kbfiltr_simpl1_AVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kbfiltr_simpl2_AVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf8.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/inf8_AVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/encode_ie_nosprintf_PIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/encode_ie_interproc_PIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/NetBSD_anyMeta_PIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/PfPb_PIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/PfP_PIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/SLRb_PIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/encode_ie_interproc_AIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_SpamAssassin.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>SpamAssassin.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/SpamAssassin_AIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_sendmail_fromqp.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>sendmail_fromqp.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/sendmail_fromqp_AIDFA_part.obj</option>
	</tasks>	
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>invert_string.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/invert_string_AIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/fibonacci_AIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/relax_simple_AIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/mem_slave_tlm.1_PVpDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/mem_slave_tlm.2_PVpDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kbfiltr_simpl2_PVpDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_6_PVpDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kbfiltr_simpl1_AVpDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5_AVpDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5d_AVpDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kundu_uninit_b_PSMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/transmitter.01_PSMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/transmitter.02_PSMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/inf6_VSMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kundu_uninit_b_VSMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/transmitter.02_VSMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/transmitter.01_ASMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/transmitter.02_ASMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <include>powerof2approx.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/powerof2approx_ASMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5d_PVMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>inf1.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/inf1_PVMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5_AVMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_12d_AVMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5d_AVMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5_PVpMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/encode_ie_interproc_PVpMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/encode_ie_nosprintf_PVpMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5d_AVpMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/relax_simple_AVpMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/encode_ie_nosprintf_AVpMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/invert_sorted_PISDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/div_PISDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/fibonacci_PISDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/fibonacci_AISDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/palindrom_AISDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/invert_array_AISDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/fibonacci_PISJS_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/palindrom_PISJS_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/invert_array_PISJS_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/invert_sorted_AISJS_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	   
	  <include>div.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/div_AISJS_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/palindrom_AISJS_part.obj</option>
	</tasks>
  </rundefinition>
-->

<rundefinition name="CPA1+CPA2_Analysis trans">
	
   <tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <include>locks_PLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <include>token_ring.03_PLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <include>mem_slave_tlm.1_PLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <include>s3_srvr_PLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <include>token_ring.02_VLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <include>token_ring.04_VLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.03_VLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <include>s3_srvr_ALMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.01_ALMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.02_ALMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio_PUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_PUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf_PUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline_AUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>s3_srvr_AUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_AUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>s3_srvr_VUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio_VUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_VUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline_PUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>cdaudio_PUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>diskperf_PUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline_AUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline2_AUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>s3_srvr_AUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>s3_srvr_VUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>cdaudio_VUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline2_VUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <include>condsum_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>propertInFlag_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfP_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPb_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPc_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>list_statistics_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>harmonicMean_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>fraction_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLR_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <include>fac_negsum_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <include>SubMinSumDiv_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>lockfree-3.0_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks7.spc</option>
	  <include>test_locks_7_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks8.spc</option>
	  <include>test_locks_8_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
          <include>inf4_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf8_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>propertyInFlag_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLRb_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <include>SubMinSumDiv_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESP_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPa_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPb_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPc_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>addIterations_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLRb_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLR_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf6_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf8_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <include>kundu_uninit_b_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <include>mem_slave_tlm.1_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <include>mem_slave_tlm.2_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPb_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPc_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESP_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPb_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>lockfree-3.1_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl1_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl2_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5d_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_12_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_12d_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <include>mem_slave_tlm.1_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <include>mem_slave_tlm.2_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <include>test_locks_6_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl1_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl2_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf8.spc</option>
	  <include>inf8_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_nosprintf_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_interproc_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <include>NetBSD_anyMeta_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>PfPb_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>PfP_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>SLRb_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_interproc_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_SpamAssassin.spc</option>
	  <include>SpamAssassin_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_sendmail_fromqp.spc</option>
	  <include>sendmail_fromqp_AIDFA_trans.c</include>
	</tasks>	
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>invert_string_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <include>fibonacci_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>relax_simple_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1_PVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2_PVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2_PVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6_PVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	  <include>kbfiltr_simpl1_AVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5_AVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5d_AVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <include>kundu_uninit_b_PSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.01_PSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.02_PSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf6_VSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	 <include>kundu_uninit_b_VSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.02_VSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.01_ASMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.02_ASMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <include>powerof2approx_ASMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5d_PVMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <include>inf1_PVMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5_AVMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	 <include>test_locks_12d_AVMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5d_AVMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5_PVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc_PVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf_PVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5d_AVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <include>relax_simple_AVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <include>encode_ie_nosprintf_AVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_sorted_PISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>div_PISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_PISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_AISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>palindrom_AISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_array_AISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_PISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>palindrom_PISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_array_PISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_sorted_AISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>div_AISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>palindrom_AISJS_trans.c</include>
	</tasks>
  </rundefinition>

<!--<rundefinition name="CPA1+CPA2_Analysis trans partial partitioned">
	    <option name="-setprop">analysis.algorithm.proofCheck=true</option>
	    <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
        <option name="-setprop">pcc.proof=config/pfp/partial partitioned trans/${sourcefile_name}_part.obj</option>
        <option name="-setprop">cpa.callstack.domain=FLATPCC</option>
        <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
        <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
        <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
   <tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <include>locks_PLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <include>token_ring.03_PLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <include>mem_slave_tlm.1_PLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <include>s3_srvr_PLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <include>token_ring.02_VLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <include>token_ring.04_VLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.03_VLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <include>s3_srvr_ALMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.01_ALMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.02_ALMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio_PUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_PUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf_PUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline_AUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>s3_srvr_AUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_AUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>s3_srvr_VUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio_VUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_VUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline_PUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>cdaudio_PUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>diskperf_PUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline_AUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline2_AUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>s3_srvr_AUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>s3_srvr_VUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>cdaudio_VUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline2_VUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <include>condsum_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>propertInFlag_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfP_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPb_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPc_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>list_statistics_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>harmonicMean_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>fraction_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLR_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <include>fac_negsum_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <include>SubMinSumDiv_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>lockfree-3.0_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks7.spc</option>
	  <include>test_locks_7_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks8.spc</option>
	  <include>test_locks_8_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
          <include>inf4_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf8_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>propertyInFlag_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLRb_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <include>SubMinSumDiv_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESP_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPa_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPb_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPc_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>addIterations_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLRb_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLR_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf6_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf8_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <include>kundu_uninit_b_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <include>mem_slave_tlm.1_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <include>mem_slave_tlm.2_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPb_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPc_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESP_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPb_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>lockfree-3.1_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl1_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl2_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5d_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_12_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_12d_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <include>mem_slave_tlm.1_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <include>mem_slave_tlm.2_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <include>test_locks_6_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl1_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl2_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf8.spc</option>
	  <include>inf8_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_nosprintf_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_interproc_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <include>NetBSD_anyMeta_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>PfPb_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>PfP_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>SLRb_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_interproc_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_SpamAssassin.spc</option>
	  <include>SpamAssassin_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_sendmail_fromqp.spc</option>
	  <include>sendmail_fromqp_AIDFA_trans.c</include>
	</tasks>	
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>invert_string_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <include>fibonacci_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>relax_simple_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1_PVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2_PVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2_PVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6_PVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	  <include>kbfiltr_simpl1_AVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5_AVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5d_AVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <include>kundu_uninit_b_PSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.01_PSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.02_PSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf6_VSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	 <include>kundu_uninit_b_VSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.02_VSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.01_ASMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.02_ASMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <include>powerof2approx_ASMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5d_PVMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <include>inf1_PVMC_trans.c</include>
	</tasks>

	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5_AVMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	 <include>test_locks_12d_AVMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5d_AVMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5_PVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc_PVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf_PVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5d_AVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <include>relax_simple_AVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <include>encode_ie_nosprintf_AVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_sorted_PISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>div_PISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_PISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_AISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>palindrom_AISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_array_AISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_PISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>palindrom_PISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_array_PISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_sorted_AISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>div_AISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>palindrom_AISJS_trans.c</include>
	</tasks>
  </rundefinition>
-->

<rundefinition name="CPA1+CPA2_Analysis lazy">
	<option name="-setprop">enabledanalysis.allowLazyRefinement=true</option>	
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>locks.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>token_ring.03.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>s3_srvr.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>token_ring.02.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>token_ring.04.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.03.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <include>s3_srvr.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.01.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.02.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>s3_srvr.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>cdaudio.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>pipeline.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>cdaudio.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>diskperf.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <include>pipeline.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <include>pipeline2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <include>s3_srvr.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>cdaudio.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks7.spc</option>
	  <include>test_locks_7.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks8.spc</option>
	  <include>test_locks_8.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf4.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <include>inf8.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <include>propertyInFlag.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <include>SLRb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SubMinSumDiv.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <include>ESP.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <include>ESPa.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <include>ESPb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <include>ESPc.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>addIterations.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLR.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf6.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>inf8.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>PfPb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>PfPc.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>ESP.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>lockfree-3.1.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <include>test_locks_6.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf8.spc</option>
	  <include>inf8.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_interproc.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_SpamAssassin.spc</option>
	  <include>SpamAssassin.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_sendmail_fromqp.spc</option>
	  <include>sendmail_fromqp.cil.c</include>
	</tasks>	
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>invert_string.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>fibonacci.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>relax_simple.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl1.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5d.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf6.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>transmitter.02.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>powerof2approx.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_12d.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>relax_simple.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>fibonacci.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>palindrom.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_array.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_sorted.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	   <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>div.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	</tasks>
  </rundefinition>

<!--<rundefinition name="CPA1+CPA2_Analysis lazy regression">
	<option name="-setprop">enabledanalysis.allowLazyRefinement=true</option>
	
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>locks.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/locks_PLMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/token_ring.03_PLMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/mem_slave_tlm.1_PLMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/s3_srvr_PLMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/token_ring.02_VLMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/token_ring.04VLMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/transmitter.03_VLMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/transmitter.01_ALMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/transmitter.02_ALMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/cdaudio_PUDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/pipeline2_PUDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/diskperf_PUDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/s3_srvr_VUDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/cdaudio_VUDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/pipeline2_VUDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/pipeline_PUMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/cdaudio_PUMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/diskperf_PUMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/s3_srvr_VUMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/cdaudio_VUMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/pipeline2_VUMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/condsum_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/propertyInFlag_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/PfP_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/PfPb_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/PfPc_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/list_statistics_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/harmonicMean_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/fraction_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/SLR_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/fac_negsum_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/SubMinSumDiv_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/lockfree-3.0_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf4.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/inf4_ASDFA_lazy_init.txt</option>
	</tasks>
		<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/SubMinSumDiv_ASDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>addIterations.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/addIterations_ASDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/SLRb_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLR.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/SLR_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/inf6_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>inf8.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/inf8_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/kundu_unint_b_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/mem_slave_tlm.1_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/PfPb_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/PfPc_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>ESP.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/ESP_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/ESPb_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/lockfree-3.1_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/test_locks_5_PVDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/kbfiltr_simpl1_PVDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/kbfiltr_simpl2_PVDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/test_locks_5d_PVDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/test_locks_12_PVDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/test_locks_12d_PVDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/encode_ie_nosprintf_PIDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/encode_ie_interproc_PIDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/NetBSD_anyMeta_PIDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/PfPb_PIDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/PfPc_PIDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/SLRb_PIDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/fibonacci_AIDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialinitialPrecisionFile=config/pfp/precision/config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/mem_slave_tlm.1_PVpDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialinitialPrecisionFile=config/pfp/precision/config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/mem_slave_tlm.2_PVpDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialinitialPrecisionFile=config/pfp/precision/config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/kbfiltr_simpl2_PVpDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialinitialPrecisionFile=config/pfp/precision/config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/test_locks_6_PVpDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialinitialPrecisionFile=config/pfp/precision/config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_5AVpDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialinitialPrecisionFile=config/pfp/precision/config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_5d_AVpDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/kundu_uninit_b_PSMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/transmitter.01_PSMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/transmitter.02_PSMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/inf6_VSMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/kundu_uninit_b_VSMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/pfp/precision/transmitter.02_VSMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>powerof2approx.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/powerof2approx_ASMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/test_locks_5d_PVMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/inf1_PVMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_5_AVMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_12d_AVMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_5d_AVMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialinitialPrecisionFile=config/pfp/precision/config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/test_locks_5_PVpMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialinitialPrecisionFile=config/pfp/precision/config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/encode_ie_interproc_PVpMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialinitialPrecisionFile=config/pfp/precision/config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/encode_ie_nosprintf_PVpMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialinitialPrecisionFile=config/pfp/precision/config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/test_locks_5d_AVpMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialinitialPrecisionFile=config/pfp/precision/config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/relax_simple_AVpMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialinitialPrecisionFile=config/pfp/precision/config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/encode_ie_nosprintf_AVpMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/invert_sorted_PISDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/div_PISDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/fibonacci_PISDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.apron.initialPrecisionFile=config/pfp/precision/fibonacci_AISDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/fibonacci_PISJS_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/palindrom_PISJS_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">cpa.predicate.abstraction.initialPredicates=config/pfp/precision/invert_array_PISJS_lazy_init.txt</option>
	</tasks>
	</rundefinition>
-->
<rundefinition name="CPA1+CPA2_Analysis lazy arg">
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
        <option name="-setprop">cpa.callstack.domain=FLATPCC</option>
        <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
        <option name="-setprop">PropertyCheckerCPA.cpa=cpa.arg.ARGCPA</option>
        <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
        <option name="-setprop">cpa.predicate.stop=SEPPCC</option>
        <option name="-setprop">cpa.predicate.satCheckAtAbstraction=true</option>
        <option name="-setprop">cpa.apron.initialPrecisionType=STATIC_FULL</option>
        <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>	
        <option name="-stack">51200k</option>
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  
	  <include>locks.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/locks_PLMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/token_ring.03_PLMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/mem_slave_tlm.1_PLMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/s3_srvr_PLMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/token_ring.02_VLMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/token_ring.04VLMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/transmitter.03_VLMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/transmitter.01_ALMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/transmitter.02_ALMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/cdaudio_PUDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/pipeline2_PUDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/diskperf_PUDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/s3_srvr_VUDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/cdaudio_VUDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/pipeline2_VUDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/pipeline_PUMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/cdaudio_PUMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/diskperf_PUMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/s3_srvr_VUMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/cdaudio_VUMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/pipeline2_VUMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/condsum_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/propertyInFlag_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/PfP_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/PfPb_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/PfPc_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/list_statistics_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/harmonicMean_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/fraction_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/SLR_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/fac_negsum_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/SubMinSumDiv_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/lockfree-3.0_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
	  
	  <include>inf4.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/inf4_ASDFA_lazy_arg.obj</option>
	</tasks>
		<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/SubMinSumDiv_ASDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  
	  <include>addIterations.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/addIterations_ASDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/SLRb_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/SLR_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/inf6_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/inf8_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kundu_unint_b_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/mem_slave_tlm.1_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/PfPb_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/PfPc_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/ESP_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/ESPb_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/lockfree-3.1_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5_PVDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kbfiltr_simpl1_PVDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kbfiltr_simpl2_PVDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5d_PVDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_12_PVDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_12d_PVDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/encode_ie_nosprintf_PIDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/encode_ie_interproc_PIDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/NetBSD_anyMeta_PIDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/PfPb_PIDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/PfPc_PIDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/SLRb_PIDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/fibonacci_AIDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/mem_slave_tlm.1_PVpDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/mem_slave_tlm.2_PVpDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kbfiltr_simpl2_PVpDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_6_PVpDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5AVpDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5d_AVpDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kundu_uninit_b_PSMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	  
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/transmitter.01_PSMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/transmitter.02_PSMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  
	  
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/inf6_VSMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/kundu_uninit_b_VSMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/transmitter.02_VSMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  
	  
	  <include>powerof2approx.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/powerof2approx_ASMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5d_PVMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  
	  
	  <include>inf1.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/inf1_PVMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5_AVMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_12d_AVMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5d_AVMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5_PVpMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/encode_ie_interproc_PVpMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/encode_ie_nosprintf_PVpMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/test_locks_5d_AVpMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/relax_simple_AVpMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/encode_ie_nosprintf_AVpMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/invert_sorted_PISDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/div_PISDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/fibonacci_PISDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/fibonacci_AISDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  
	  
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/fibonacci_PISJS_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/palindrom_PISJS_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/arg/invert_array_PISJS_lazy_arg.obj</option>
	</tasks>
	</rundefinition>
<!--
<rundefinition name="CPA1+CPA2_Analysis lazy reached">
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
        <option name="-setprop">cpa.callstack.domain=FLATPCC</option>
        <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
        <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
        <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
        <option name="-setprop">cpa.predicate.stop=SEPPCC</option>
        <option name="-setprop">cpa.predicate.satCheckAtAbstraction=true</option>
        <option name="-setprop">cpa.apron.initialPrecisionType=STATIC_FULL</option>
        <option name="-setprop">pcc.strategy=ReachedSetStrategy</option>	
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  
	  <include>locks.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/locks_PLMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/token_ring.03_PLMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/mem_slave_tlm.1_PLMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/s3_srvr_PLMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/token_ring.02_VLMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/token_ring.04VLMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/transmitter.03_VLMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/transmitter.01_ALMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/transmitter.02_ALMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/cdaudio_PUDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/pipeline2_PUDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/diskperf_PUDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/s3_srvr_VUDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/cdaudio_VUDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/pipeline2_VUDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/pipeline_PUMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/cdaudio_PUMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/diskperf_PUMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/s3_srvr_VUMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/cdaudio_VUMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/pipeline2_VUMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/condsum_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/propertyInFlag_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/PfP_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/PfPb_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/PfPc_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/list_statistics_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/harmonicMean_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/fraction_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/SLR_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/fac_negsum_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/SubMinSumDiv_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/lockfree-3.0_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
	  
	  <include>inf4.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/inf4_ASDFA_lazy_reached.obj</option>
	</tasks>
		<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/SubMinSumDiv_ASDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  
	  <include>addIterations.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/addIterations_ASDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/SLRb_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/SLR_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/inf6_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/inf8_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kundu_unint_b_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/mem_slave_tlm.1_VSDFA_lazy_reached.obj</option>
	</tasks>

	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/PfPb_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/PfPc_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/ESP_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/ESPb_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/lockfree-3.1_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5_PVDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kbfiltr_simpl1_PVDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kbfiltr_simpl2_PVDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5d_PVDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_12_PVDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_12d_PVDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/encode_ie_nosprintf_PIDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/encode_ie_interproc_PIDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/NetBSD_anyMeta_PIDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/PfPb_PIDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/PfPc_PIDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/SLRb_PIDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/fibonacci_AIDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/mem_slave_tlm.1_PVpDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/mem_slave_tlm.2_PVpDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kbfiltr_simpl2_PVpDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_6_PVpDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5AVpDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5d_AVpDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kundu_uninit_b_PSMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	  
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/transmitter.01_PSMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/transmitter.02_PSMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  
	  
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/inf6_VSMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/kundu_uninit_b_VSMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/transmitter.02_VSMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  
	  
	  <include>powerof2approx.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/powerof2approx_ASMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5d_PVMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  
	  
	  <include>inf1.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/inf1_PVMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5_AVMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_12d_AVMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5d_AVMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5_PVpMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/encode_ie_interproc_PVpMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/encode_ie_nosprintf_PVpMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/test_locks_5d_AVpMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/relax_simple_AVpMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/encode_ie_nosprintf_AVpMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/invert_sorted_PISDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/div_PISDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/fibonacci_PISDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/fibonacci_AISDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  
	  
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/fibonacci_PISJS_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/palindrom_PISJS_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/reached/invert_array_PISJS_lazy_reached.obj</option>
	</tasks>
	</rundefinition>
	
<rundefinition name="CPA1+CPA2_Analysis lazy partial partitioned">
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
        <option name="-setprop">cpa.callstack.domain=FLATPCC</option>
        <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
        <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
        <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
        <option name="-setprop">cpa.predicate.stop=SEPPCC</option>
        <option name="-setprop">cpa.predicate.satCheckAtAbstraction=true</option>	
        <option name="-setprop">cpa.apron.initialPrecisionType=STATIC_FULL</option>
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <include>locks.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/locks_PLMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/token_ring.03_PLMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/mem_slave_tlm.1_PLMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/s3_srvr_PLMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/token_ring.02_VLMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/token_ring.04VLMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/transmitter.03_VLMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/transmitter.01_ALMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/transmitter.02_ALMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/cdaudio_PUDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/pipeline2_PUDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/diskperf_PUDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/s3_srvr_VUDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/cdaudio_VUDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/pipeline2_VUDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/pipeline_PUMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/cdaudio_PUMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/diskperf_PUMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/s3_srvr_VUMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/cdaudio_VUMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/pipeline2_VUMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/condsum_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/propertyInFlag_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/PfP_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/PfPb_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/PfPc_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/list_statistics_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/harmonicMean_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/fraction_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/SLR_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/fac_negsum_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/SubMinSumDiv_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/lockfree-3.0_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>inf4.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/inf4_ASDFA_lazy_part.obj</option>
	</tasks>
		<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/SubMinSumDiv_ASDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>addIterations.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/addIterations_ASDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/SLRb_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/SLR_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/inf6_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/inf8_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kundu_unint_b_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/mem_slave_tlm.1_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/PfPb_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/PfPc_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/ESP_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/ESPb_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/lockfree-3.1_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5_PVDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kbfiltr_simpl1_PVDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kbfiltr_simpl2_PVDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5d_PVDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_12_PVDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_12d_PVDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/encode_ie_nosprintf_PIDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/encode_ie_interproc_PIDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/NetBSD_anyMeta_PIDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/PfPb_PIDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/PfPc_PIDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/SLRb_PIDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/fibonacci_AIDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/mem_slave_tlm.1_PVpDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/mem_slave_tlm.2_PVpDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kbfiltr_simpl2_PVpDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_6_PVpDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5AVpDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5d_AVpDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kundu_uninit_b_PSMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/transmitter.01_PSMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/transmitter.02_PSMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/inf6_VSMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/kundu_uninit_b_VSMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/transmitter.02_VSMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <include>powerof2approx.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/powerof2approx_ASMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5d_PVMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>inf1.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/inf1_PVMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5_AVMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_12d_AVMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5d_AVMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5_PVpMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/encode_ie_interproc_PVpMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/encode_ie_nosprintf_PVpMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/test_locks_5d_AVpMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/relax_simple_AVpMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/encode_ie_nosprintf_AVpMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/invert_sorted_PISDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/div_PISDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/fibonacci_PISDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/fibonacci_AISDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/fibonacci_PISJS_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/palindrom_PISJS_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">pcc.strategy=parallel.PartialReachedSetPartitioningParallelStrategy</option>
	  
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proof=config/pfp/partial partitioned/invert_array_PISJS_lazy_part.obj</option>
	</tasks>
	</rundefinition>
-->

<rundefinition name="CPA1+CPA2_Analysis lazy trans">
   <tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <include>locks_PLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <include>token_ring.03_PLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <include>mem_slave_tlm.1_PLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <include>s3_srvr_PLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <include>token_ring.02_VLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <include>token_ring.04VLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.03_VLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.01_ALMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.02_ALMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio_PUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_PUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf_PUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>s3_srvr_VUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio_VUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_VUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline_PUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>cdaudio_PUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>diskperf_PUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>s3_srvr_VUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>cdaudio_VUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline2_VUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <include>condsum_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>propertyInFlag_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfP_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPb_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPc_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>list_statistics_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>harmonicMean_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>fraction_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLR_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <include>fac_negsum_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <include>SubMinSumDiv_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>lockfree-3.0_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
	  <include>inf4_ASDFA_lazy_trans.c</include>
	</tasks>
		<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <include>SubMinSumDiv_ASDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>addIterations_ASDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLRb_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLR_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf6_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf8_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <include>kundu_unint_b_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <include>mem_slave_tlm.1_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPb_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPc_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESP_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPb_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>lockfree-3.1_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl1_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl2_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5d_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_12_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_12d_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_nosprintf_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_interproc_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <include>NetBSD_anyMeta_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>PfPb_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>PfPc_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>SLRb_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <include>fibonacci_AIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1_PVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2_PVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2_PVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6_PVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5AVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5d_AVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b_PSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01_PSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_tokenring.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02_PSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>inf6_VSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b_VSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02_VSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>powerof2approx_ASMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d_PVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1_PVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5_AVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_12d_AVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d_AVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5_PVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc_PVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf_PVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5d_AVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <include>relax_simple_AVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <include>encode_ie_nosprintf_AVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_sorted_PISDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>div_PISDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_PISDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_AISDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci_PISJS_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom_PISJS_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array_PISJS_lazy_trans.c</include>
	</tasks>
	</rundefinition>

<rundefinition name="CPA1+CPA2_Analysis lazy trans partial partitioned">
<option name="-setprop">analysis.algorithm.proofCheck=true</option>
	    <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
        <option name="-setprop">pcc.proof=config/pfp/partial partitioned trans/${sourcefile_name}_part.obj</option>
        <option name="-setprop">cpa.callstack.domain=FLATPCC</option>
        <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
        <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
        <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
   <tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <include>locks_PLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <include>token_ring.03_PLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <include>mem_slave_tlm.1_PLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <include>s3_srvr_PLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <include>token_ring.02_VLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <include>token_ring.04VLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.03_VLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.01_ALMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.02_ALMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio_PUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_PUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf_PUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>s3_srvr_VUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio_VUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_VUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline_PUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>cdaudio_PUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>diskperf_PUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>s3_srvr_VUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>cdaudio_VUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline2_VUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <include>condsum_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>propertyInFlag_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfP_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPb_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPc_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>list_statistics_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>harmonicMean_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>fraction_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLR_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <include>fac_negsum_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <include>SubMinSumDiv_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>lockfree-3.0_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
	  <include>inf4_ASDFA_lazy_trans.c</include>
	</tasks>
		<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <include>SubMinSumDiv_ASDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>addIterations_ASDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLRb_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLR_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf6_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf8_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <include>kundu_unint_b_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <include>mem_slave_tlm.1_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPb_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPc_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESP_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPb_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>lockfree-3.1_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl1_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl2_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5d_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_12_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_12d_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_nosprintf_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_interproc_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <include>NetBSD_anyMeta_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>PfPb_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>PfPc_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>SLRb_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <include>fibonacci_AIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1_PVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2_PVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2_PVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6_PVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5AVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5d_AVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  
	  <include>kundu_uninit_b_PSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	  <include>transmitter.01_PSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	  <include>transmitter.02_PSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  
	  <include>inf6_VSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  
	  <include>kundu_uninit_b_VSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  
	  <include>transmitter.02_VSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  
	  <include>powerof2approx_ASMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  <include>test_locks_5d_PVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  
	  <include>inf1_PVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  <include>test_locks_5_AVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  <include>test_locks_12d_AVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  <include>test_locks_5d_AVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5_PVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc_PVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf_PVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5d_AVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <include>relax_simple_AVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <include>encode_ie_nosprintf_AVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_sorted_PISDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>div_PISDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_PISDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_AISDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  
	  <include>fibonacci_PISJS_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  <include>palindrom_PISJS_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  
	  <include>invert_array_PISJS_lazy_trans.c</include>
	</tasks>
	</rundefinition>


<columns>
<column title="Total time">Total time for CPAchecker</column>
<column title="Set up time">Time for analysis setup</column>
<column title="Parse time">Time for CFA construction</column>
<column title="Analysis time">Time for Analysis</column>
<column title="Precision read time">Initial precision read time</column>
<column title="Proof check time">Total time for proof check algorithm</column>
<column title="#Proof elements">Number of proof elements</column>
<column title="#Refine">Number of refinements</column>
<column title="#Loc">Number of program locations</column>
<column title="memory heap">Used heap memory</column>
<column title="memory non-heap">Used non-heap memory</column>
<!--<column title="#algos">Number of algorithms used</column>-->
</columns>
</benchmark>
