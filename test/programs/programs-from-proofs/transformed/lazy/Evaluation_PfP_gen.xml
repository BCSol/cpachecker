<?xml version="1.0"?>
<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.0//EN" "http://www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="cpachecker" hardtimelimit="3000" cpuCores="2" >
<option name="-heap">5000M</option>
  <option name="-disable-java-assertions"/>
  <!--<option name="-noout"/>-->
  <option name="-nolog"/>
  <option name="-setprop">statistics.memory=false</option>
  
  <option name="-setprop">cpa.apron.splitDisequalities=false</option>
  <option name="-setprop">solver.solver=MATHSAT5</option>
  <option name="-setprop">cfa.useMultiEdges=false</option>
  <option name="-setprop">limits.time.cpu=2700s</option>

<!--<resultfiles>**init.txt</resultfiles>-->
<resultfiles>**.obj</resultfiles>
<!--<resultfiles>**trans.c</resultfiles>-->

  <!--<rundefinition name="CPA1+CPA2_Analysis trans">
	<option name="-setprop">enabledanalysis.allowLazyRefinement=false</option>	
	<option name="-setprop">cpa.arg.addInclude=false</option>
	<option name="-setprop">cpa.predicate.blk.alwaysAtEndOfProgram=true</option>
	<option name="-setprop">cpa.arg.dumpARG=true</option>
	<option name="-setprop">analysis.postProcessing=true</option>
	<option name="-setprop">cpa.arg.disableRVARGSimplification=true</option>
	<option name="-setprop">cpa.arg.deleteInCPAEnabledAnalysis=true</option>
 <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>locks.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=locks_PLMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=token_ring.03_PLMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=mem_slave_tlm.1_PLMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=s3_srvr_PLMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=token_ring.02_VLMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=token_ring.04_VLMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=transmitter.03_VLMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=s3_srvr_ALMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=transmitter.01_ALMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=transmitter.02_ALMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=cdaudio_PUDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=pipeline2_PUDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=diskperf_PUDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=pipeline_AUDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=s3_srvr_AUDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=pipeline2_AUDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=s3_srvr_VUDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=cdaudio_VUDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=pipeline2_VUDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=pipeline_PUMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=cdaudio_PUMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=diskperf_PUMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=pipeline_AUMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=pipeline2_AUMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=s3_srvr_AUMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=s3_srvr_VUMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=cdaudio_VUMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=pipeline2_VUMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=condsum_PSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=propertInFlag_PSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=PfP_PSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=PfPb_PSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=PfPc_PSDFA_trans.c</option>
	</tasks>	
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=list_statistics_PSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=harmonicMean_PSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=fraction_PSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=SLR_PSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=fac_negsum_PSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=SubMinSumDiv_PSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=lockfree-3.0_PSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks7.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_7.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_7_ASDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>test_locks_8.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_8_ASDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
      <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>inf4.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=inf4_ASDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=inf8_ASDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=propertyInFlag_ASDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=SLRb_ASDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=SubMinSumDiv_ASDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESP.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=ESP_ASDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPa.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=ESPa_ASDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=ESPb_ASDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPc.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=ESPc_ASDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>addIterations.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=addIterations_ASDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=SLRb_VSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLR.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=SLR_VSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=inf6_VSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=inf8_VSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kundu_uninit_b_VSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=mem_slave_tlm.1_VSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=mem_slave_tlm.2_VSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=PfPb_VSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=PfPc_VSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>ESP.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=ESP_VSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=ESPb_VSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=lockfree-3.1_VSDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5_PVDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kbfiltr_simpl1_PVDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kbfiltr_simpl2_PVDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5d_PVDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_12_PVDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_12d_PVDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=mem_slave_tlm.1_AVDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=mem_slave_tlm.2_AVDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>test_locks_6.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_6_AVDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kbfiltr_simpl1_AVDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kbfiltr_simpl2_AVDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=inf8_AVDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=encode_ie_nosprintf_PIDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=encode_ie_interproc_PIDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=NetBSD_anyMeta_PIDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=PfPb_PIDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=PfP_PIDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=SLRb_PIDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=encode_ie_interproc_AIDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_SpamAssassin.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SpamAssassin.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=SpamAssassin_AIDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_sendmail_fromqp.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>sendmail_fromqp.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=sendmail_fromqp_AIDFA_trans.c</option>
	</tasks>	
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>invert_string.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=invert_string_AIDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=fibonacci_AIDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=relax_simple_AIDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=mem_slave_tlm.1_PVpDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=mem_slave_tlm.2_PVpDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kbfiltr_simpl2_PVpDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_6_PVpDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kbfiltr_simpl1_AVpDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5_AVpDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5d_AVpDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kundu_uninit_b_PSMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=transmitter.01_PSMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=transmitter.02_PSMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=inf6_VSMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kundu_uninit_b_VSMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=transmitter.02_VSMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=transmitter.01_ASMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=transmitter.02_ASMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>powerof2approx.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=powerof2approx_ASMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5d_PVMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=inf1_PVMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5_AVMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_12d_AVMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5d_AVMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5_PVpMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=encode_ie_interproc_PVpMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=encode_ie_nosprintf_PVpMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5d_AVpMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=relax_simple_AVpMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=encode_ie_nosprintf_AVpMC_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=invert_sorted_PISDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=div_PISDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=fibonacci_PISDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=fibonacci_AISDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=palindrom_AISDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=invert_array_AISDFA_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=fibonacci_PISJS_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=palindrom_PISJS_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=invert_array_PISJS_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=invert_sorted_AISJS_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	   <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>div.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=div_AISJS_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=palindrom_AISJS_trans.c</option>
	</tasks>
  </rundefinition>-->

<!--
<rundefinition name="CPA1+CPA2_Analysis regression">
	<option name="-setprop">enabledanalysis.allowLazyRefinement=false</option>
	<option name="-setprop">analysis.postProcessing=false</option>
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>locks.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=locks_PLMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=token_ring.03_PLMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=mem_slave_tlm.1_PLMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=s3_srvr_PLMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=token_ring.02_VLMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=token_ring.04_VLMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=transmitter.03_VLMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=s3_srvr_ALMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=transmitter.01_ALMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=transmitter.02_ALMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=cdaudio_PUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=pipeline2_PUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=diskperf_PUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=pipeline_AUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=s3_srvr_AUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=pipeline2_AUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=s3_srvr_VUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=cdaudio_VUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=pipeline2_VUDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=pipeline_PUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=cdaudio_PUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=diskperf_PUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=pipeline_AUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=pipeline2_AUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=s3_srvr_AUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=s3_srvr_VUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=cdaudio_VUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=pipeline2_VUMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=condsum_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=propertInFlag_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=PfP_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=PfPb_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=PfPc_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=list_statistics_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=harmonicMean_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=fraction_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=SLR_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=fac_negsum_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=SubMinSumDiv_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=lockfree-3.0_PSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks7.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_7.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_7_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>test_locks_8.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_8_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
      <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>inf4.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=inf4_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=inf8_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=propertyInFlag_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=SLRb_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=SubMinSumDiv_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESP.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=ESP_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPa.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=ESPa_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=ESPb_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPc.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=ESPc_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>addIterations.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=addIterations_ASDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.value.precisionFile=SLRb_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLR.c</include>
	  <option name="-setprop">cpa.value.precisionFile=SLR_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">cpa.value.precisionFile=inf6_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">cpa.value.precisionFile=inf8_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=kundu_uninit_b_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=mem_slave_tlm.1_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=mem_slave_tlm.2_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.value.precisionFile=PfPb_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.value.precisionFile=PfPc_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>ESP.c</include>
	  <option name="-setprop">cpa.value.precisionFile=ESP_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
          <option name="-setprop">cpa.value.precisionFile=ESPb_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">cpa.value.precisionFile=lockfree-3.1_VSDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=test_locks_5_PVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=kbfiltr_simpl1_PVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=kbfiltr_simpl2_PVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=test_locks_5d_PVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=test_locks_12_PVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=test_locks_12d_PVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=mem_slave_tlm.1_AVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=mem_slave_tlm.2_AVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>test_locks_6.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_6_AVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=kbfiltr_simpl1_AVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=kbfiltr_simpl2_AVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=inf8_AVDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=encode_ie_nosprintf_PIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=encode_ie_interproc_PIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=NetBSD_anyMeta_PIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=PfPb_PIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=PfP_PIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=SLRb_PIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=encode_ie_interproc_AIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_SpamAssassin.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SpamAssassin.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=SpamAssassin_AIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_sendmail_fromqp.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>sendmail_fromqp.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=sendmail_fromqp_AIDFA_init.txt</option>
	</tasks>	
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>invert_string.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=invert_string_AIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=fibonacci_AIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=relax_simple_AIDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=mem_slave_tlm.1_PVpDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=mem_slave_tlm.2_PVpDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=kbfiltr_simpl2_PVpDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=test_locks_6_PVpDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=kbfiltr_simpl1_AVpDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_5_AVpDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_5d_AVpDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=kundu_uninit_b_PSMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=transmitter.01_PSMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=transmitter.02_PSMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">cpa.value.precisionFile=inf6_VSMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=kundu_uninit_b_VSMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=transmitter.02_VSMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=transmitter.01_ASMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=transmitter.02_ASMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>powerof2approx.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=powerof2approx_ASMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=test_locks_5d_PVMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=inf1_PVMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_5_AVMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_12d_AVMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_5d_AVMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=test_locks_5_PVpMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=encode_ie_interproc_PVpMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=encode_ie_nosprintf_PVpMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_5d_AVpMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=relax_simple_AVpMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=encode_ie_nosprintf_AVpMC_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=invert_sorted_PISDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=div_PISDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=fibonacci_PISDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=fibonacci_AISDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=palindrom_AISDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=invert_array_AISDFA_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=fibonacci_PISJS_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=palindrom_PISJS_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=invert_array_PISJS_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=invert_sorted_AISJS_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	   <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>div.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=div_AISJS_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=palindrom_AISJS_init.txt</option>
	</tasks>
  </rundefinition>
 -->

<!--<rundefinition name="CPA1+CPA2_Analysis arg">
	<option name="-stack">51200k</option>
	<option name="-setprop">enabledanalysis.allowLazyRefinement=false</option>
	<option name="-setprop">analysis.postProcessing=false</option>
        <option name="-setprop">pcc.proofgen.doPCC=true</option>
        <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>	
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>locks.c</include>
	  <option name="-setprop">pcc.proofFile=locks_PLMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.03_PLMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_PLMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_PLMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.02_VLMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.04_VLMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.03_VLMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_ALMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_ALMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_ALMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_PUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_PUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=diskperf_PUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline_AUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_AUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_AUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_VUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_VUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_VUDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline_PUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_PUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=diskperf_PUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline_AUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_AUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_AUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_VUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_VUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_VUMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">pcc.proofFile=condsum_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proofFile=propertInFlag_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">pcc.proofFile=PfP_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">pcc.proofFile=list_statistics_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">pcc.proofFile=harmonicMean_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">pcc.proofFile=fraction_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proofFile=SLR_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">pcc.proofFile=fac_negsum_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proofFile=SubMinSumDiv_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">pcc.proofFile=lockfree-3.0_PSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks7.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_7.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_7_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>test_locks_8.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_8_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
      <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>inf4.c</include>
	  <option name="-setprop">pcc.proofFile=inf4_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proofFile=inf8_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proofFile=propertyInFlag_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proofFile=SubMinSumDiv_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proofFile=ESP_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPa.c</include>
	  <option name="-setprop">pcc.proofFile=ESPa_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proofFile=ESPb_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPc.c</include>
	  <option name="-setprop">pcc.proofFile=ESPc_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>addIterations.c</include>
	  <option name="-setprop">pcc.proofFile=addIterations_ASDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proofFile=SLR_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proofFile=inf6_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proofFile=inf8_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.2_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proofFile=ESP_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proofFile=ESPb_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">pcc.proofFile=lockfree-3.1_VSDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_PVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl1_PVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_PVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_PVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12_PVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12d_PVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_AVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.2_AVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_6_AVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl1_AVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_AVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proofFile=inf8_AVDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_PIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_PIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">pcc.proofFile=NetBSD_anyMeta_PIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_PIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfP_PIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_PIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_AIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_SpamAssassin.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SpamAssassin.cil.c</include>
	  <option name="-setprop">pcc.proofFile=SpamAssassin_AIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_sendmail_fromqp.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>sendmail_fromqp.cil.c</include>
	  <option name="-setprop">pcc.proofFile=sendmail_fromqp_AIDFA_arg.obj</option>
	</tasks>	
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>invert_string.c</include>
	  <option name="-setprop">pcc.proofFile=invert_string_AIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_AIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proofFile=relax_simple_AIDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_PVpDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.2_PVpDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_PVpDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_6_PVpDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl1_AVpDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_AVpDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVpDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_PSMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_PSMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_PSMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proofFile=inf6_VSMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_VSMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_VSMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_ASMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_ASMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>powerof2approx.c</include>
	  <option name="-setprop">pcc.proofFile=powerof2approx_ASMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_PVMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1.c</include>
	  <option name="-setprop">pcc.proofFile=inf1_PVMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_AVMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12d_AVMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_PVpMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_PVpMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_PVpMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVpMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proofFile=relax_simple_AVpMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_AVpMC_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proofFile=invert_sorted_PISDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proofFile=div_PISDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_PISDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_AISDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proofFile=palindrom_AISDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proofFile=invert_array_AISDFA_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_PISJS_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proofFile=palindrom_PISJS_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proofFile=invert_array_PISJS_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proofFile=invert_sorted_AISJS_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	   <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proofFile=div_AISJS_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proofFile=palindrom_AISJS_arg.obj</option>
	</tasks>
  </rundefinition>-->

 <!--<rundefinition name="CPA1+CPA2_Analysis reached">
	<option name="-setprop">enabledanalysis.allowLazyRefinement=false</option>
	<option name="-setprop">analysis.postProcessing=false</option>
        <option name="-setprop">pcc.proofgen.doPCC=true</option>
        <option name="-setprop">pcc.strategy=ReachedSetStrategy</option>	
  <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>locks.c</include>
	  <option name="-setprop">pcc.proofFile=locks_PLMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.03_PLMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_PLMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_PLMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.02_VLMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.04_VLMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.03_VLMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_ALMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_ALMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_ALMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_PUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_PUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=diskperf_PUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline_AUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_AUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_AUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_VUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_VUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_VUDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline_PUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_PUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=diskperf_PUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline_AUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_AUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_AUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_VUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_VUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_VUMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">pcc.proofFile=condsum_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proofFile=propertInFlag_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">pcc.proofFile=PfP_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">pcc.proofFile=list_statistics_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">pcc.proofFile=harmonicMean_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">pcc.proofFile=fraction_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proofFile=SLR_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">pcc.proofFile=fac_negsum_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proofFile=SubMinSumDiv_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">pcc.proofFile=lockfree-3.0_PSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks7.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_7.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_7_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>test_locks_8.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_8_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
      <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>inf4.c</include>
	  <option name="-setprop">pcc.proofFile=inf4_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proofFile=inf8_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proofFile=propertyInFlag_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proofFile=SubMinSumDiv_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proofFile=ESP_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPa.c</include>
	  <option name="-setprop">pcc.proofFile=ESPa_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proofFile=ESPb_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPc.c</include>
	  <option name="-setprop">pcc.proofFile=ESPc_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>addIterations.c</include>
	  <option name="-setprop">pcc.proofFile=addIterations_ASDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proofFile=SLR_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proofFile=inf6_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proofFile=inf8_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.2_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proofFile=ESP_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proofFile=ESPb_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">pcc.proofFile=lockfree-3.1_VSDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_PVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl1_PVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_PVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_PVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12_PVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12d_PVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_AVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.2_AVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_6_AVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl1_AVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_AVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proofFile=inf8_AVDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_PIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_PIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">pcc.proofFile=NetBSD_anyMeta_PIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_PIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfP_PIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_PIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_AIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_SpamAssassin.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SpamAssassin.cil.c</include>
	  <option name="-setprop">pcc.proofFile=SpamAssassin_AIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_sendmail_fromqp.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>sendmail_fromqp.cil.c</include>
	  <option name="-setprop">pcc.proofFile=sendmail_fromqp_AIDFA_reached.obj</option>
	</tasks>	
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>invert_string.c</include>
	  <option name="-setprop">pcc.proofFile=invert_string_AIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_AIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proofFile=relax_simple_AIDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_PVpDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.2_PVpDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_PVpDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_6_PVpDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl1_AVpDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_AVpDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVpDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_PSMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_PSMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_PSMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proofFile=inf6_VSMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_VSMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_VSMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_ASMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_ASMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>powerof2approx.c</include>
	  <option name="-setprop">pcc.proofFile=powerof2approx_ASMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_PVMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1.c</include>
	  <option name="-setprop">pcc.proofFile=inf1_PVMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_AVMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12d_AVMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_PVpMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_PVpMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_PVpMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVpMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proofFile=relax_simple_AVpMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_AVpMC_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proofFile=invert_sorted_PISDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proofFile=div_PISDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_PISDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_AISDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proofFile=palindrom_AISDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proofFile=invert_array_AISDFA_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_PISJS_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proofFile=palindrom_PISJS_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proofFile=invert_array_PISJS_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proofFile=invert_sorted_AISJS_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	   <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proofFile=div_AISJS_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proofFile=palindrom_AISJS_reached.obj</option>
	</tasks>
  </rundefinition>-->

<!--<rundefinition name="CPA1+CPA2_Analysis partial partitioned">
	<option name="-setprop">enabledanalysis.allowLazyRefinement=false</option>
        <option name="-setprop">pcc.proofgen.doPCC=true</option>
        <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
        <option name="-setprop">pcc.partitioning.maxNumelemsPerPartition=10</option>
        <option name="-setprop">pcc.partitioning.useGraphSizeToComputPartitionNumer=true</option>
        <option name="-setprop">pcc.partitioning.partitioningStrategy=BEST_FIRST</option>	
        <option name="-setprop">pcc.partial.certificateType=ARG</option>
        <option name="-setprop">analysis.postProcessing=false</option>
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>locks.c</include>
	  <option name="-setprop">pcc.proofFile=locks_PLMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.03_PLMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_PLMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_PLMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.02_VLMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.04_VLMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.03_VLMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_ALMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_ALMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_ALMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_PUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_PUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=diskperf_PUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline_AUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_AUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_AUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_VUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_VUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_VUDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline_PUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_PUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=diskperf_PUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline_AUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_AUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_AUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_VUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_VUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_VUMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">pcc.proofFile=condsum_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proofFile=propertInFlag_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">pcc.proofFile=PfP_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">pcc.proofFile=list_statistics_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">pcc.proofFile=harmonicMean_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">pcc.proofFile=fraction_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proofFile=SLR_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">pcc.proofFile=fac_negsum_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proofFile=SubMinSumDiv_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">pcc.proofFile=lockfree-3.0_PSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks7.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_7.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_7_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>test_locks_8.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_8_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
      <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>inf4.c</include>
	  <option name="-setprop">pcc.proofFile=inf4_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proofFile=inf8_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proofFile=propertyInFlag_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proofFile=SubMinSumDiv_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proofFile=ESP_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPa.c</include>
	  <option name="-setprop">pcc.proofFile=ESPa_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proofFile=ESPb_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPc.c</include>
	  <option name="-setprop">pcc.proofFile=ESPc_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>addIterations.c</include>
	  <option name="-setprop">pcc.proofFile=addIterations_ASDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proofFile=SLR_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proofFile=inf6_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proofFile=inf8_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.2_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proofFile=ESP_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proofFile=ESPb_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">pcc.proofFile=lockfree-3.1_VSDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_PVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl1_PVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_PVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_PVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12_PVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12d_PVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_AVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.2_AVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_6_AVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl1_AVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_AVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proofFile=inf8_AVDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_PIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_PIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">pcc.proofFile=NetBSD_anyMeta_PIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_PIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfP_PIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_PIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_AIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_SpamAssassin.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SpamAssassin.cil.c</include>
	  <option name="-setprop">pcc.proofFile=SpamAssassin_AIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_sendmail_fromqp.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>sendmail_fromqp.cil.c</include>
	  <option name="-setprop">pcc.proofFile=sendmail_fromqp_AIDFA_part.obj</option>
	</tasks>	
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>invert_string.c</include>
	  <option name="-setprop">pcc.proofFile=invert_string_AIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_AIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proofFile=relax_simple_AIDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_PVpDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.2_PVpDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_PVpDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_6_PVpDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl1_AVpDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_AVpDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVpDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_PSMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_PSMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_PSMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proofFile=inf6_VSMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_VSMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_VSMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_ASMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_ASMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>powerof2approx.c</include>
	  <option name="-setprop">pcc.proofFile=powerof2approx_ASMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_PVMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1.c</include>
	  <option name="-setprop">pcc.proofFile=inf1_PVMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_AVMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12d_AVMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_PVpMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_PVpMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_PVpMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVpMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proofFile=relax_simple_AVpMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_AVpMC_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proofFile=invert_sorted_PISDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proofFile=div_PISDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_PISDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_AISDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proofFile=palindrom_AISDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proofFile=invert_array_AISDFA_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_PISJS_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proofFile=palindrom_PISJS_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proofFile=invert_array_PISJS_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proofFile=invert_sorted_AISJS_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	   <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proofFile=div_AISJS_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proofFile=palindrom_AISJS_part.obj</option>
	</tasks>
  </rundefinition>-->

 <rundefinition name="CPA1+CPA2_Analysis trans partial partitioned">
	    <option name="-setprop">pcc.proofgen.doPCC=true</option>
	    <option name="-setprop">analysis.postProcessing=false</option>
	    <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
        <option name="-setprop">pcc.partitioning.maxNumelemsPerPartition=10</option>
        <option name="-setprop">pcc.partitioning.useGraphSizeToComputPartitionNumer=true</option>
        <option name="-setprop">pcc.partitioning.partitioningStrategy=BEST_FIRST</option>	
        <option name="-setprop">pcc.partial.certificateType=MONOTONESTOPARG</option>
        <option name="-setprop">pcc.proofFile=${sourcefile_name}_part.obj</option>
        <option name="-setprop">cpa=cpa.arg.ARGCPA</option>
        <option name="-setprop">ARGCPA.cpa=cpa.composite.CompositeCPA</option>
  <!--<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <include>locks_PLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <include>token_ring.03_PLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <include>mem_slave_tlm.1_PLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <include>s3_srvr_PLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <include>token_ring.02_VLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <include>token_ring.04_VLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.03_VLMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <include>s3_srvr_ALMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.01_ALMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.02_ALMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio_PUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_PUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf_PUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline_AUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>s3_srvr_AUDFA_trans.c</include>
	</tasks>-->
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_AUDFA_trans.c</include>
	</tasks>
	<!--<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>s3_srvr_VUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio_VUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_VUDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline_PUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>cdaudio_PUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>diskperf_PUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline_AUMC_trans.c</include>
	</tasks>-->
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline2_AUMC_trans.c</include>
	</tasks>
	<!--<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>s3_srvr_AUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>s3_srvr_VUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>cdaudio_VUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline2_VUMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <include>condsum_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>propertInFlag_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfP_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPb_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPc_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>list_statistics_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>harmonicMean_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>fraction_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLR_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <include>fac_negsum_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <include>SubMinSumDiv_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>lockfree-3.0_PSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks7.spc</option>
	  <include>test_locks_7_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_test_locks8.spc</option>
	  <include>test_locks_8_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
          <include>inf4_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf8_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>propertyInFlag_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLRb_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <include>SubMinSumDiv_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESP_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPa_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPb_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPc_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>addIterations_ASDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLRb_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLR_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf6_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf8_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <include>kundu_uninit_b_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <include>mem_slave_tlm.1_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <include>mem_slave_tlm.2_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPb_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPc_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESP_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPb_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>lockfree-3.1_VSDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl1_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl2_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5d_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_12_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_12d_PVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <include>mem_slave_tlm.1_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <include>mem_slave_tlm.2_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <include>test_locks_6_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl1_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl2_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf8.spc</option>
	  <include>inf8_AVDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_nosprintf_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_interproc_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <include>NetBSD_anyMeta_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>PfPb_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>PfP_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>SLRb_PIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_interproc_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_SpamAssassin.spc</option>
	  <include>SpamAssassin_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_sendmail_fromqp.spc</option>
	  <include>sendmail_fromqp_AIDFA_trans.c</include>
	</tasks>	
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>invert_string_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <include>fibonacci_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>relax_simple_AIDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1_PVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2_PVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2_PVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6_PVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	  <include>kbfiltr_simpl1_AVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5_AVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5d_AVpDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <include>kundu_uninit_b_PSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.01_PSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.02_PSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf6_VSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	 <include>kundu_uninit_b_VSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.02_VSMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.01_ASMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <include>transmitter.02_ASMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <include>powerof2approx_ASMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5d_PVMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <include>inf1_PVMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5_AVMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	 <include>test_locks_12d_AVMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5d_AVMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5_PVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc_PVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf_PVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5d_AVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <include>relax_simple_AVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <include>encode_ie_nosprintf_AVpMC_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_sorted_PISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>div_PISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_PISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_AISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>palindrom_AISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_array_AISDFA_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_PISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>palindrom_PISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_array_PISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_sorted_AISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>div_AISJS_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>palindrom_AISJS_trans.c</include>
	</tasks>-->
  </rundefinition>

<rundefinition name="CPA1+CPA2_Analysis lazy arg">
	<option name="-setprop">enabledanalysis.allowLazyRefinement=true</option>
	<option name="-setprop">analysis.postProcessing=false</option>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
    <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>	
    <option name="-stack">51200k</option>
   <!--<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>locks.c</include>
	  <option name="-setprop">pcc.proofFile=locks_PLMC_lazy_arg.obj</option>
	</tasks>-->
	<!--<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.03_PLMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_PLMC_lazy_arg.obj</option>
	</tasks>-->
	<!--<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_PLMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.02_VLMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.04VLMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.03_VLMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_ALMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_ALMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_PUDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_PUDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=diskperf_PUDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_VUDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_VUDFA_lazy_arg.obj</option>
	</tasks>-->
	<!--<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_VUDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline_PUMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_PUMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=diskperf_PUMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_VUMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_VUMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_VUMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">pcc.proofFile=condsum_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proofFile=propertyInFlag_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">pcc.proofFile=PfP_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_PSDFA_lazy_arg.obj</option>
	</tasks>-->
	<!--<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">pcc.proofFile=list_statistics_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">pcc.proofFile=harmonicMean_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">pcc.proofFile=fraction_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proofFile=SLR_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">pcc.proofFile=fac_negsum_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proofFile=SubMinSumDiv_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">pcc.proofFile=lockfree-3.0_PSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf4.c</include>
	  <option name="-setprop">pcc.proofFile=inf4_ASDFA_lazy_arg.obj</option>
	</tasks>
		<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proofFile=SubMinSumDiv_ASDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>addIterations.c</include>
	  <option name="-setprop">pcc.proofFile=addIterations_ASDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proofFile=SLR_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proofFile=inf6_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proofFile=inf8_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_unint_b_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proofFile=ESP_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proofFile=ESPb_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">pcc.proofFile=lockfree-3.1_VSDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_PVDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl1_PVDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_PVDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_PVDFA_lazy_arg.obj</option>
	</tasks>-->
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12_PVDFA_lazy_arg.obj</option>
	</tasks>
	<!--<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12d_PVDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_PIDFA_lazy_arg.obj</option>
	</tasks>-->
	<!--<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_PIDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">pcc.proofFile=NetBSD_anyMeta_PIDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_PIDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_PIDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_PIDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_AIDFA_lazy_arg.obj</option>
	</tasks>-->
	<!--<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_PVpDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.2_PVpDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_PVpDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_6_PVpDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5AVpDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVpDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_PSMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_PSMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_PSMC_lazy_arg.obj</option>
	</tasks>-->
	<!--<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proofFile=inf6_VSMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_VSMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_VSMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>powerof2approx.c</include>
	  <option name="-setprop">pcc.proofFile=powerof2approx_ASMC_lazy_arg.obj</option>
	</tasks>-->
	<!--<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_PVMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1.c</include>
	  <option name="-setprop">pcc.proofFile=inf1_PVMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_AVMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12d_AVMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVMC_lazy_arg.obj</option>
	</tasks>-->
	<!--<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_PVpMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_PVpMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_PVpMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVpMC_lazy_arg.obj</option>
	</tasks>-->
	<!--<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proofFile=relax_simple_AVpMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_AVpMC_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proofFile=invert_sorted_PISDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proofFile=div_PISDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_PISDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_AISDFA_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_PISJS_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proofFile=palindrom_PISJS_lazy_arg.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proofFile=invert_array_PISJS_lazy_arg.obj</option>
	</tasks>-->
	</rundefinition>

 <!--<rundefinition name="CPA1+CPA2_Analysis lazy trans">
	<option name="-setprop">enabledanalysis.allowLazyRefinement=true</option>
	<option name="-setprop">cpa.arg.addInclude=false</option>
	<option name="-setprop">cpa.predicate.blk.alwaysAtEndOfProgram=true</option>
	<option name="-setprop">cpa.arg.dumpARG=true</option>
	<option name="-setprop">analysis.postProcessing=true</option>
	<option name="-setprop">cpa.arg.disableRVARGSimplification=true</option>
	<option name="-setprop">cpa.arg.deleteInCPAEnabledAnalysis=false</option>	
  <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>locks.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=locks_PLMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=token_ring.03_PLMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=mem_slave_tlm.1_PLMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=s3_srvr_PLMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=token_ring.02_VLMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=token_ring.04VLMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=transmitter.03_VLMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=transmitter.01_ALMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=transmitter.02_ALMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=cdaudio_PUDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=pipeline2_PUDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=diskperf_PUDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=s3_srvr_VUDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=cdaudio_VUDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=pipeline2_VUDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=pipeline_PUMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=cdaudio_PUMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=diskperf_PUMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=s3_srvr_VUMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=cdaudio_VUMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=pipeline2_VUMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=condsum_PSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=propertyInFlag_PSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=PfP_PSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=PfPb_PSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=PfPc_PSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=list_statistics_PSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=harmonicMean_PSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=fraction_PSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=SLR_PSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=fac_negsum_PSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=SubMinSumDiv_PSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=lockfree-3.0_PSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf4.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=inf4_ASDFA_lazy_trans.c</option>
	</tasks>
		<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=SubMinSumDiv_ASDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>addIterations.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=addIterations_ASDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=SLRb_VSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLR.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=SLR_VSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=inf6_VSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>inf8.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=inf8_VSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kundu_unint_b_VSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=mem_slave_tlm.1_VSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=PfPb_VSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=PfPc_VSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>ESP.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=ESP_VSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=ESPb_VSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=lockfree-3.1_VSDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5_PVDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kbfiltr_simpl1_PVDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kbfiltr_simpl2_PVDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5d_PVDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_12_PVDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_12d_PVDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=encode_ie_nosprintf_PIDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=encode_ie_interproc_PIDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=NetBSD_anyMeta_PIDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=PfPb_PIDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=PfPc_PIDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=SLRb_PIDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=fibonacci_AIDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=mem_slave_tlm.1_PVpDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=mem_slave_tlm.2_PVpDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kbfiltr_simpl2_PVpDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_6_PVpDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5AVpDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5d_AVpDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kundu_uninit_b_PSMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=transmitter.01_PSMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=transmitter.02_PSMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=inf6_VSMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=kundu_uninit_b_VSMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=transmitter.02_VSMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>powerof2approx.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=powerof2approx_ASMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5d_PVMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=inf1_PVMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5_AVMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_12d_AVMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5d_AVMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5_PVpMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=encode_ie_interproc_PVpMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=encode_ie_nosprintf_PVpMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=test_locks_5d_AVpMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=relax_simple_AVpMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=encode_ie_nosprintf_AVpMC_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=invert_sorted_PISDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=div_PISDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=fibonacci_PISDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=fibonacci_AISDFA_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=fibonacci_PISJS_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=palindrom_PISJS_lazy_trans.c</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">cpa.arg.dumpFile=invert_array_PISJS_lazy_trans.c</option>
	</tasks>
	</rundefinition>
-->

<!--<rundefinition name="CPA1+CPA2_Analysis lazy regression">
	<option name="-setprop">enabledanalysis.allowLazyRefinement=true</option>
	<option name="-setprop">analysis.postProcessing=false</option>
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>locks.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=locks_PLMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=token_ring.03_PLMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=mem_slave_tlm.1_PLMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=s3_srvr_PLMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=token_ring.02_VLMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=token_ring.04VLMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=transmitter.03_VLMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=transmitter.01_ALMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=transmitter.02_ALMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=cdaudio_PUDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=pipeline2_PUDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=diskperf_PUDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=s3_srvr_VUDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=cdaudio_VUDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=pipeline2_VUDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=pipeline_PUMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=cdaudio_PUMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=diskperf_PUMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=s3_srvr_VUMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=cdaudio_VUMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=pipeline2_VUMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=condsum_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=propertyInFlag_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=PfP_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=PfPb_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=PfPc_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=list_statistics_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=harmonicMean_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=fraction_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=SLR_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=fac_negsum_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=SubMinSumDiv_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=lockfree-3.0_PSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf4.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=inf4_ASDFA_lazy_init.txt</option>
	</tasks>
		<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=SubMinSumDiv_ASDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>addIterations.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=addIterations_ASDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.value.precisionFile=SLRb_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLR.c</include>
	  <option name="-setprop">cpa.value.precisionFile=SLR_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">cpa.value.precisionFile=inf6_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>inf8.c</include>
	  <option name="-setprop">cpa.value.precisionFile=inf8_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=kundu_unint_b_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=mem_slave_tlm.1_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.value.precisionFile=PfPb_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.value.precisionFile=PfPc_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>ESP.c</include>
	  <option name="-setprop">cpa.value.precisionFile=ESP_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">cpa.value.precisionFile=ESPb_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">cpa.value.precisionFile=lockfree-3.1_VSDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=test_locks_5_PVDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=kbfiltr_simpl1_PVDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=kbfiltr_simpl2_PVDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=test_locks_5d_PVDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=test_locks_12_PVDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=test_locks_12d_PVDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=encode_ie_nosprintf_PIDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=encode_ie_interproc_PIDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=NetBSD_anyMeta_PIDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=PfPb_PIDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=PfPc_PIDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=SLRb_PIDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=fibonacci_AIDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=mem_slave_tlm.1_PVpDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=mem_slave_tlm.2_PVpDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=kbfiltr_simpl2_PVpDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=test_locks_6_PVpDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_5AVpDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_5d_AVpDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=kundu_uninit_b_PSMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=transmitter.01_PSMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=transmitter.02_PSMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">cpa.value.precisionFile=inf6_VSMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=kundu_uninit_b_VSMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">cpa.value.precisionFile=transmitter.02_VSMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>powerof2approx.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=powerof2approx_ASMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=test_locks_5d_PVMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=inf1_PVMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_5_AVMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_12d_AVMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_5d_AVMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=test_locks_5_PVpMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=encode_ie_interproc_PVpMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=encode_ie_nosprintf_PVpMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=test_locks_5d_AVpMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=relax_simple_AVpMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=encode_ie_nosprintf_AVpMC_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=invert_sorted_PISDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=div_PISDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=fibonacci_PISDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.apron.precisionFile=fibonacci_AISDFA_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=fibonacci_PISJS_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=palindrom_PISJS_lazy_init.txt</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">cpa.predicate.predmap.file=invert_array_PISJS_lazy_init.txt</option>
	</tasks>
	</rundefinition>
	-->

<!--<rundefinition name="CPA1+CPA2_Analysis lazy reached">
	<option name="-setprop">enabledanalysis.allowLazyRefinement=true</option>
	<option name="-setprop">analysis.postProcessing=false</option>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
        <option name="-setprop">pcc.strategy=ReachedSetStrategy</option>	
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>locks.c</include>
	  <option name="-setprop">pcc.proofFile=locks_PLMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.03_PLMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_PLMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_PLMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.02_VLMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.04VLMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.03_VLMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_ALMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_ALMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_PUDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_PUDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=diskperf_PUDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_VUDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_VUDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_VUDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline_PUMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_PUMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=diskperf_PUMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_VUMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_VUMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_VUMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">pcc.proofFile=condsum_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proofFile=propertyInFlag_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">pcc.proofFile=PfP_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">pcc.proofFile=list_statistics_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">pcc.proofFile=harmonicMean_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">pcc.proofFile=fraction_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proofFile=SLR_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">pcc.proofFile=fac_negsum_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proofFile=SubMinSumDiv_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">pcc.proofFile=lockfree-3.0_PSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf4.c</include>
	  <option name="-setprop">pcc.proofFile=inf4_ASDFA_lazy_reached.obj</option>
	</tasks>
		<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proofFile=SubMinSumDiv_ASDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>addIterations.c</include>
	  <option name="-setprop">pcc.proofFile=addIterations_ASDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proofFile=SLR_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proofFile=inf6_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proofFile=inf8_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_unint_b_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proofFile=ESP_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proofFile=ESPb_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">pcc.proofFile=lockfree-3.1_VSDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_PVDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl1_PVDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_PVDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_PVDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12_PVDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12d_PVDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_PIDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_PIDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">pcc.proofFile=NetBSD_anyMeta_PIDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_PIDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_PIDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_PIDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_AIDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_PVpDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.2_PVpDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_PVpDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_6_PVpDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5AVpDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVpDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_PSMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_PSMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_PSMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proofFile=inf6_VSMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_VSMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_VSMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>powerof2approx.c</include>
	  <option name="-setprop">pcc.proofFile=powerof2approx_ASMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_PVMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1.c</include>
	  <option name="-setprop">pcc.proofFile=inf1_PVMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_AVMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12d_AVMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_PVpMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_PVpMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_PVpMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVpMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proofFile=relax_simple_AVpMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_AVpMC_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proofFile=invert_sorted_PISDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proofFile=div_PISDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_PISDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_AISDFA_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_PISJS_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proofFile=palindrom_PISJS_lazy_reached.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proofFile=invert_array_PISJS_lazy_reached.obj</option>
	</tasks>
	</rundefinition>
-->	

<!--	<rundefinition name="CPA1+CPA2_Analysis lazy partial partitioned">
	<option name="-setprop">enabledanalysis.allowLazyRefinement=true</option>
	<option name="-setprop">analysis.postProcessing=false</option>
        <option name="-setprop">pcc.proofgen.doPCC=true</option>
        <option name="-setprop">pcc.partitioning.maxNumelemsPerPartition=10</option>
        <option name="-setprop">pcc.partitioning.useGraphSizeToComputPartitionNumer=true</option>
        <option name="-setprop">pcc.partitioning.partitioningStrategy=BEST_FIRST</option>	
        <option name="-setprop">pcc.partial.certificateType=ARG</option>
        <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>	
   <tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>locks.c</include>
	  <option name="-setprop">pcc.proofFile=locks_PLMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>token_ring.03.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.03_PLMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_PLMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_PLMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>token_ring.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.02_VLMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>token_ring.04.cil.c</include>
	  <option name="-setprop">pcc.proofFile=token_ring.04VLMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.03.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.03_VLMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_ALMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_ALMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_PUDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_PUDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=diskperf_PUDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_VUDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_VUDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_VUDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>pipeline.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline_PUMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_PUMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <include>diskperf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=diskperf_PUMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>s3_srvr.cil.c</include>
	  <option name="-setprop">pcc.proofFile=s3_srvr_VUMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>cdaudio.cil.c</include>
	  <option name="-setprop">pcc.proofFile=cdaudio_VUMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+UninitVars"/>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>pipeline2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=pipeline2_VUMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>condsum.c</include>
	  <option name="-setprop">pcc.proofFile=condsum_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>propertyInFlag.c</include>
	  <option name="-setprop">pcc.proofFile=propertyInFlag_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfP.c</include>
	  <option name="-setprop">pcc.proofFile=PfP_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>list_statistics.cil.c</include>
	  <option name="-setprop">pcc.proofFile=list_statistics_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>harmonicMean.cil.c</include>
	  <option name="-setprop">pcc.proofFile=harmonicMean_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fraction.cil.c</include>
	  <option name="-setprop">pcc.proofFile=fraction_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proofFile=SLR_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fac_negsum.c</include>
	  <option name="-setprop">pcc.proofFile=fac_negsum_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proofFile=SubMinSumDiv_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>lockfree-3.0.c</include>
	  <option name="-setprop">pcc.proofFile=lockfree-3.0_PSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf4.c</include>
	  <option name="-setprop">pcc.proofFile=inf4_ASDFA_lazy_part.obj</option>
	</tasks>
		<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SubMinSumDiv.c</include>
	  <option name="-setprop">pcc.proofFile=SubMinSumDiv_ASDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">analysis.traversal.order=dfs</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>addIterations.c</include>
	  <option name="-setprop">pcc.proofFile=addIterations_ASDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>SLR.c</include>
	  <option name="-setprop">pcc.proofFile=SLR_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proofFile=inf6_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>inf8.c</include>
	  <option name="-setprop">pcc.proofFile=inf8_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN,LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_unint_b_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>ESP.c</include>
	  <option name="-setprop">pcc.proofFile=ESP_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>ESPb.c</include>
	  <option name="-setprop">pcc.proofFile=ESPb_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>lockfree-3.1.c</include>
	  <option name="-setprop">pcc.proofFile=lockfree-3.1_VSDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_PVDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl1_PVDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_PVDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_PVDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12_PVDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12d_PVDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_PIDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_PIDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>NetBSD_anyMeta.cil.c</include>
	  <option name="-setprop">pcc.proofFile=NetBSD_anyMeta_PIDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPb.c</include>
	  <option name="-setprop">pcc.proofFile=PfPb_PIDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>PfPc.c</include>
	  <option name="-setprop">pcc.proofFile=PfPc_PIDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>SLRb.c</include>
	  <option name="-setprop">pcc.proofFile=SLRb_PIDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_AIDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.1_PVpDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=mem_slave_tlm.2_PVpDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kbfiltr_simpl2_PVpDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_6_PVpDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5AVpDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVpDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_PSMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.01_PSMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_PSMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>inf6.c</include>
	  <option name="-setprop">pcc.proofFile=inf6_VSMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>kundu_uninit_b.cil.c</include>
	  <option name="-setprop">pcc.proofFile=kundu_uninit_b_VSMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Value+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>transmitter.02.cil.c</include>
	  <option name="-setprop">pcc.proofFile=transmitter.02_VSMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>powerof2approx.c</include>
	  <option name="-setprop">pcc.proofFile=powerof2approx_ASMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_PVMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1.c</include>
	  <option name="-setprop">pcc.proofFile=inf1_PVMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_AVMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_12d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_12d_AVMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5_PVpMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_interproc_PVpMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_PVpMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=NONE</option>
	  <include>test_locks_5d.c</include>
	  <option name="-setprop">pcc.proofFile=test_locks_5d_AVpMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=DOMAIN_MIN</option>
	  <include>relax_simple.c</include>
	  <option name="-setprop">pcc.proofFile=relax_simple_AVpMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=false</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MAX</option>
	  <include>encode_ie_nosprintf.cil.c</include>
	  <option name="-setprop">pcc.proofFile=encode_ie_nosprintf_AVpMC_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>invert_sorted.c</include>
	  <option name="-setprop">pcc.proofFile=invert_sorted_PISDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>div.c</include>
	  <option name="-setprop">pcc.proofFile=div_PISDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_PISDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Apron+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.value.refinement.prefixPreference=LENGTH_MIN</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_AISDFA_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci.c</include>
	  <option name="-setprop">pcc.proofFile=fibonacci_PISJS_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom.c</include>
	  <option name="-setprop">pcc.proofFile=palindrom_PISJS_lazy_part.obj</option>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array.c</include>
	  <option name="-setprop">pcc.proofFile=invert_array_PISJS_lazy_part.obj</option>
	</tasks>
	</rundefinition>-->

<rundefinition name="CPA1+CPA2_Analysis lazy trans partial partitioned">
   <option name="-setprop">pcc.proofgen.doPCC=true</option>
   <option name="-setprop">analysis.postProcessing=false</option>
	    <option name="-setprop">pcc.strategy=parallel.interleaved.PartialReachedSetIOCheckingOnlyInterleavedStrategy</option>
        <option name="-setprop">pcc.partitioning.maxNumelemsPerPartition=10</option>
        <option name="-setprop">pcc.partitioning.useGraphSizeToComputPartitionNumer=true</option>
        <option name="-setprop">pcc.partitioning.partitioningStrategy=BEST_FIRST</option>	
        <option name="-setprop">pcc.partial.certificateType=MONOTONESTOPARG</option>
        <option name="-setprop">pcc.proofFile=${sourcefile_name}_part.obj</option>
        <option name="-setprop">cpa=cpa.arg.ARGCPA</option>
        <option name="-setprop">ARGCPA.cpa=cpa.composite.CompositeCPA</option>
    <tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/locks_ops.spc</option>
	  <include>locks_PLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring03.spc</option>
	  <include>token_ring.03_PLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/memslave_ops.spc</option>
	  <include>mem_slave_tlm.1_PLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/ssh_ops.spc</option>
	  <include>s3_srvr_PLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring02.spc</option>
	  <include>token_ring.02_VLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/tokenring04.spc</option>
	  <include>token_ring.04VLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.03_VLMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.01_ALMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Location"/>
	  <option name="-setprop">specification=config/specification/pfp/transmitter_ops.spc</option>
	  <include>transmitter.02_ALMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio_PUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_PUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>diskperf_PUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>s3_srvr_VUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>cdaudio_VUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <option name="-setprop">cpa.uninitvars.merge=join</option>
	  <include>pipeline2_VUDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline_PUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>cdaudio_PUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>diskperf_PUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>s3_srvr_VUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>cdaudio_VUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-UninitVars"/>
	  <include>pipeline2_VUMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_condsum.spc</option>
	  <include>condsum_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>propertyInFlag_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfP_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPb_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPc_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>list_statistics_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>harmonicMean_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_list_harmonic_fraction.spc</option>
	  <include>fraction_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLR_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_fac_negsum.spc</option>
	  <include>fac_negsum_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <include>SubMinSumDiv_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>lockfree-3.0_PSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf4.spc</option>
	  <include>inf4_ASDFA_lazy_trans.c</include>
	</tasks>
		<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_SubMinSumDiv.spc</option>
	  <include>SubMinSumDiv_ASDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>addIterations_ASDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLRb_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>SLR_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf6_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <include>inf8_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <include>kundu_unint_b_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memslave.spc</option>
	  <include>mem_slave_tlm.1_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPb_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_PfP_propertyInFlag_SLR.spc</option>
	  <include>PfPc_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESP_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_ESP.spc</option>
	  <include>ESPb_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_memsafety.spc</option>
	  <include>lockfree-3.1_VSDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl1_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <include>kbfiltr_simpl2_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_5d_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_12_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <include>test_locks_12d_PVDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_nosprintf_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_encode_invert_relax.spc</option>
	  <include>encode_ie_interproc_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_NetBSD_anyMeta.spc</option>
	  <include>NetBSD_anyMeta_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>PfPb_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>PfPc_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_PfP_SLR.spc</option>
	  <include>SLRb_PIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Interval"/>
	  <option name="-setprop">specification=config/specification/pfp/Interval_fibonacci.spc</option>
	  <include>fibonacci_AIDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.1_PVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Predicate+Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_memslave.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_memslave.txt</option>
	  
	  <include>mem_slave_tlm.2_PVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_ntdrivers.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_ntdrivers.txt</option>
	 
	  <include>kbfiltr_simpl2_PVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks6.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_6_PVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5AVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5d_AVpDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b_PSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.01_PSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02_PSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_inf6_8.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>inf6_VSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_kundu.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>kundu_uninit_b_VSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_transmitter.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>transmitter.02_VSMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Sign"/>
	  <option name="-setprop">specification=config/specification/pfp/Sign_powerof2approx.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>powerof2approx_ASMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d_PVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_inf1.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>inf1_PVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5_AVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_12d_AVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <include>test_locks_5d_AVMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  
	  <include>test_locks_5_PVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_interproc_PVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  
	  <include>encode_ie_nosprintf_PVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_test_locks5_5d_12_12d.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_locks.txt</option>
	  <include>test_locks_5d_AVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <include>relax_simple_AVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-Value"/>
	  <option name="-setprop">specification=config/specification/pfp/Value_encode_invert_relax.spc</option>
	  <option name="-setprop">cpa.value.merge=SEP</option>
	  <option name="-setprop">cpa.value.initialPrecisionFile=config/initPrec/initValPrec_encode_relax.txt</option>
	  <include>encode_ie_nosprintf_AVpMC_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>invert_sorted_PISDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <include>div_PISDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_PISDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <include>fibonacci_AISDFA_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_fibonacci.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>fibonacci_PISJS_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>palindrom_PISJS_lazy_trans.c</include>
	</tasks>
	<tasks>
	  <option name="-PfP-IntervalSign"/>
	  <option name="-setprop">specification=config/specification/pfp/IntervalSign_div_invert_array_invert_sorted_palindrom.spc</option>
	  <option name="-setprop">cpa.sign.merge=SEP</option>
	  <include>invert_array_PISJS_lazy_trans.c</include>
	</tasks>
	</rundefinition>



<columns>
<column title="Total time">Total time for CPAchecker</column>
<column title="Set up time">Time for analysis setup</column>
<column title="Parse time">Time for CFA construction</column>
<column title="Analysis time">Time for Analysis</column>
<column title="Precision read time">Initial precision read time</column>
<column title="Proof check time">Total time for proof check algorithm</column>
<column title="#Proof elements">Number of proof elements</column>
<column title="#Refine">Number of refinements</column>
<column title="#Loc">Number of program locations</column>
<column title="memory heap">Used heap memory</column>
<column title="memory non-heap">Used non-heap memory</column>
<column title="program gen">Total time for ARG to C translation</column>
<column title="proof construct">Time for preparing proof construction</column>
<column title="total proof time">Total time for proof generation</column>
<!--<column title="#algos">Number of algorithms used</column>-->
</columns>
</benchmark>
