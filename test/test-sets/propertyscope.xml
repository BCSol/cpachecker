<?xml version="1.0"?>
<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.0//EN" "http://www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="cpachecker" timelimit="900 s" hardtimelimit="1000 s" memlimit="15 GB" cpuCores="4">
  <rundefinition name="propertyscope">
  </rundefinition>

  <rundefinition name="propertyscope-sbe">
    <option name="-setprop">cpa.predicate.blk.threshold=1</option>
  </rundefinition>

  <option name="-heap">10000M</option>
  <option name="-propertyScope"/>
  <option name="-noout"/>

  <propertyfile>${sourcefile_path}/ALL.prp</propertyfile>
  <!-- Witness files are several GB in total, ignore them for now.
  <resultfiles>**.graphml</resultfiles>
  -->

<!--  <tasks name="ArraysReach">
    <includesfile>../programs/benchmarks/ArraysReach.set</includesfile>
  </tasks>-->
<!--  <tasks name="ArraysMemSafety">
    <includesfile>../programs/benchmarks/ArraysMemSafety.set</includesfile>
  </tasks>-->
<!--  <tasks name="BitVectorsReach">
    <includesfile>../programs/benchmarks/BitVectorsReach.set</includesfile>
  </tasks>-->
<!--  <tasks name="BitVectorsOverflows">
    <includesfile>../programs/benchmarks/BitVectorsOverflows.set</includesfile>
    <option name="-64"/>
  </tasks>
  <tasks name="HeapReach">
    <includesfile>../programs/benchmarks/HeapReach.set</includesfile>
  </tasks>
  <tasks name="HeapMemSafety">
    <includesfile>../programs/benchmarks/HeapMemSafety.set</includesfile>
  </tasks>
  <tasks name="Floats">
    <includesfile>../programs/benchmarks/Floats.set</includesfile>
&lt;!&ndash;    <option name="-setprop">cpa.predicate.handlePointerAliasing=false</option>&ndash;&gt;
  </tasks>-->
  <tasks name="ControlFlow">
    <includesfile>../programs/benchmarks/ControlFlow.set</includesfile>
  </tasks>
  <tasks name="Simple">
    <includesfile>../programs/benchmarks/Simple.set</includesfile>
<!--    <option name="-setprop">cpa.predicate.handlePointerAliasing=false</option>-->
  </tasks>
<!--  <tasks name="ECA">
    <includesfile>../programs/benchmarks/ECA.set</includesfile>
  </tasks>
  <tasks name="Loops">
    <includesfile>../programs/benchmarks/Loops.set</includesfile>
-->
  <tasks name="ProductLines">
    <includesfile>../programs/benchmarks/ProductLines.set</includesfile>
  </tasks>
<!--  <tasks name="Sequentialized">
    <includesfile>../programs/benchmarks/Sequentialized.set</includesfile>
  </tasks>-->
<!--  <tasks name="Termination">
    <includesfile>../programs/benchmarks/Termination.set</includesfile>
&lt;!&ndash;    <option name="-setprop">cpa.predicate.handlePointerAliasing=false</option>&ndash;&gt;
    <option name="-64" />
  </tasks>-->
<!--  <tasks name="Concurrency">
    <includesfile>../programs/benchmarks/Concurrency.set</includesfile>
  </tasks>-->
  <tasks name="DeviceDriversLinux64">
    <includesfile>../programs/benchmarks/DeviceDriversLinux64.set</includesfile>
<!--    <option name="-setprop">cpa.predicate.handlePointerAliasing=false</option>-->
    <option name="-64"/>
  </tasks>
  <tasks name="BusyBox">
    <includesfile>../programs/benchmarks/BusyBox.set</includesfile>
    <option name="-64"/>
  </tasks>
 <columns>

    <column title="non_true_abs_func">Functions with non-true abstraction: </column>
    <column title="non_true_abs_func_cnt">Non-true abstraction function count:</column>
    <column title="total_func_cnt">Total functions:</column>
    <column title="visited_func_cnt">Visited functions:</column>
    <column title="entry_func_candidate">New entry Function Candidate:</column>
    <column title="num_global_vars_abs_formula">Number of global variables in abstraction formulas: </column>
    <column title="num_non_true_abs_states">Number of non-true abstraction states:</column>
    <column title="num_abstractions">Number of abstractions:</column>
    <column title="avg_global_var_in_abs_formula_atoms">Average ratio of formula atoms with global variable:</column>
    <column title="highest_callstack_point_non_true_abs">Highest point in callstack with non-true abstraction formula:</column>
    <column title="global_observer_target_reach_count">Global observer automaton reached target count:</column>
    <column title="num_trivialy_used_predicates">Number of trivially used predicates:</column>
    <column title="nontrue_true_nontrue_seq_num">NONTRUE-TRUE-NONTRUE seqences:</column>


 </columns>


</benchmark>
