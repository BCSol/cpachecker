# where to save all output
output.path = test/output/

# name of the output file for logging
log.file = CPALog.txt

# set log level of cpa log file. lower log levels include all higher ones.
# possibilities in descending order: 
# OFF: 		no logs published
# SEVERE: 	error messages
# WARNING: 	warnings
# INFO: 	messages
# FINE: 	logs on main application level
# FINER: 	logs on central CPA algorithm level
# FINEST: 	logs published by specific CPAs
# ALL: 		debugging information
# Care must be taken with levels of FINER or lower, as output files may 
# become quite large and memory usage might become an issue. 

# log level of file output
log.level = OFF

# set log level of console output
log.consoleLevel = INFO

# optionally, list levels to be excluded from being logged
#log.fileExclude = FINER, INFO
#log.consoleExclude = FINER

# do we want to print cfa as .dot, true or false
cfa.export = false

# filename for cfa export
cfa.file = cfa.dot

# do we want to simplify cfa?
cfa.simplify = false

# run consistency checks on the cfa?
cfa.check = true

# set to true if you want to run an interprocedural analysis
analysis.interprocedural = true
analysis.useGlobalVars = true

# if true, don't create call/return edges for external function calls
analysis.noExternalCalls = true

# don't use a composite CPA
analysis.noCompositeCPA = false

# entry function
analysis.entryFunction = main
    
# which strategy to adopt for visiting states? dfs, bfs, or topsort
analysis.traversal = topsort

# which CPAs do we want to use? where is the CPA class that represents the corresponding analysis?
# if additional location information is necessary, locationCPA must be the first given in the list
# e.g. analysis.cpas = cpa.location.LocationCPA, ...
analysis.cpas = cpa.location.LocationCPA, cpa.observeranalysis.ObserverAutomatonCPA

# what merge operator do we want to use for each cpa? give the merge types in respective order with analysis.cpas property
# use sep for MergeSep and join for MergeJoin
analysis.mergeOperators = sep, sep, sep

# what stop operator do we want to use for each cpa? give the merge types in respective order with analysis.cpas property
# use sep for StopSep and join for StopJoin
analysis.stopOperators = sep, sep, sep

# if true, don't print the set of reachable states at the end of the analysis
analysis.dontPrintReachableStates = false

# if true, perform a (very) simple "cone-of-influence" reduction, to get rid
# of all the nodes and edges that are not reachable from the error locations
cfa.removeIrrelevantForErrorLocations = true

# use location mapped reached set
cpa.useSpecializedReachedSet = true

explicitAnalysis.threshold = 2000


#input File for ObserverAutomatonAnalysis
observerAnalysis.inputFile =  test/tests/observerAutomata/LockingAutomaton.txt