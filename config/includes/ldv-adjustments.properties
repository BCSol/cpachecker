
# rev.8272 of CPAchecker has added support for global structure initializations
# it has negative effect for drivers, so switch it off
# outdated in rev.14526
# cpa.value.interpolation.ignoreLoopsExitAssumes = false

output.disable         = true
statistics.memory      = false

# Set 64-bit machine model
analysis.machineModel = Linux64

# Disable counterexample double-check
analysis.checkCounterexamples = false

# Turn on Immutable CFA 3
analysis.summaryEdges = true
analysis.functionPointerCalls = true
cpa.callstack.skipRecursion = true

# Set several custom (LDV-specific) nondet functions
cpa.predicate.nondetFunctions = nondet_int,sscanf,random,ldv_undef_ptr,ldv_undef_int,ldv_undef_ulong

# Ignore function calls by pointer if the value of pointer variable is not known by FunctionPointerCPA
cpa.functionpointer.ignoreUnknownFunctionPointerCalls=true

# Workaround for #193
# (Conflicting PredicateCPA and FunctionPointerCPA with ignoreUnknownFunctionPointerCalls heuristic)
cpa.predicate.trackFunctionPointers=false

# Pointer analysis with UF options
cpa.predicate.handlePointerAliasing = true

cpa.predicate.defaultArrayLength = 1
cpa.predicate.maxArrayLength = 1

# Setting the option to make memory allocations behave according the C standard:
# return 0 in case of failure
cpa.predicate.memoryAllocationsAlwaysSucceed = false

# Avoid typically huge amount of messages about dead code
cfa.showDeadCode = false
