# ------------------------------------------------------------------
# TestGen ... TODO: write description
# ------------------------------------------------------------------

# CBMC is is not used to cross-check counterexamples
analysis.checkCounterexamples = false

# Use the TestGenAlgorithm
analysis.algorithm.testGen = true

testgen.stopOnError = true

analysis.traversal.order = DFS
# RAND
# DFS
# testgen.iterationStrategy = SAME_ALGORITHM_RESTART
# testgen.iterationStrategy = SAME_ALGORITHM_FILTER_WAITLIST

# ARGCPA is needed for counterexample analysis
cpa                     = cpa.arg.ARGCPA
ARGCPA.cpa              = cpa.composite.CompositeCPA
CompositeCPA.cpas       = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.value.ValueAnalysisCPA, cpa.automaton.ControlAutomatonCPA EvalOnlyOnePathAutomaton

EvalOnlyOnePathAutomaton.cpa.automaton.inputFile = config/specification/EvalOnlyOnePath.spc

# this automaton defines which locations are the error locations
specification = ./specification/default.spc

cpa.value.automatonAssumesAsStatements = true

#include includes/resource-limits.properties
# include explicitAnalysis-ItpRefiner.properties
