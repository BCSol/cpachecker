# ----------------------------------------------------------------------
# This configuration uses predicate analysis with formula encoding based
# on uninterpreted functions. This allows more precise analysis of
# pointer anliasing, structure fields, container_of macro and
# small-sized arrays.
# Bit-precise analysis is enabled in this configuration.
# ----------------------------------------------------------------------

#include predicateAnalysis-PredAbsRefiner-ABEl.properties

# An option enabling PathFormulaWithUF, CToFormulaWithUFConverter and appropriate merging policy
cpa.predicate.pointerAnalysisWithUFs =  true

# Excluding malloc, __kmalloc and kzalloc from nondet funcions
# Adding LDV-specific nondet functions
cpa.predicate.nondetFunctions = sscanf,random,ldv_undef_int,ldv_undef_ptr,ldv_undef_ulong

# Setting successful memory allocation functions
cpa.predicate.memoryAllocationFunctions = malloc,kmalloc,__kmalloc,ldv_successful_malloc
cpa.predicate.memoryAllocationFunctionsWithZeroing = kzalloc,ldv_successful_zalloc

# Setting the option to make memory allocations always return correct addresses
cpa.predicate.memoryAllocationsAlwaysSucceed = true

# Additional options to enable bit-precise analysis
cpa.predicate.replaceBitvectorWithRationalAndFunctionTheory = false
cpa.predicate.ignoreExtractConcat = false

# New heuristics: type detection and void* tracking
cpa.predicate.revealAllocationTypeFromLhs = true
cpa.predicate.deferUntypedAllocations = true

# New heuristic for cillified files: pre-populate small structures with all their fields
cpa.predicate.maxPreFilledAllocationSize = 64

# Skip recursive function calls
analysis.summaryEdges = true
analysis.functionPointerCalls = true
cpa.callstack.skipRecursion = true
