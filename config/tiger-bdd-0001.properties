cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.bdd.BDDCPA

# we handle all possible vars with BDDCPA
cpa.bdd.trackBoolean=true
cpa.bdd.trackIntEqual=true
cpa.bdd.trackIntAdd=true

# bdd.initBddNodeTableSize=100000000
bdd.initBddNodeTableSize=1000000
bdd.bddCacheSize=500000

# Enable MultiEdges, this gives a little bit of performance.
# cfa.useMultiEdges = true
cfa.useMultiEdges = false

# reverse postorder (a more restrictive topological ordering) is better than dfs if elements may be merged
# callstack is necessary for ABE with blocks across function boundaries to work well
analysis.traversal.order = bfs
analysis.traversal.useReversePostorder = true
analysis.traversal.useCallstack = true

# Use the Tiger Algorithm
analysis.algorithm.tiger = true

# Additional resource limits.
limits.time.cpu = 3600s

tiger.fqlQuery =COVER "EDGES(ID)*".EDGES(@BASICBLOCKENTRY)."EDGES(ID)*"
tiger.timeoutStrategy = RETRY_AFTER_TIMEOUT
tiger.limitsPerGoal.time.cpu = 20
tiger.limitsPerGoal.time.cpu.increment = 10
# tiger.reusePredicates = false
# tiger.reuseARG = false

tiger.algorithmConfigurationFile =tiger-internal-algorithm---no-refiner.properties
