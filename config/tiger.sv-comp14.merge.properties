# Combines tiger configuration and sv-comp14--01-explicitAnalysis-simple


#include includes/tiger.properties




# ----------------------------------------------------------------------
# This configuration file uses a sequential combination
# of two analyses: the ExplicitCPA with a maximum execution time of 100s
# and the Adjustable-Block Encoding CPA for predicate analysis.
# ----------------------------------------------------------------------

# The specification to check.
specification = specification/default.spc

cfa.useMultiEdges = true

# Use sequential combination of analyses.
# analysis.restartAfterUnknown = true

# The used analyses.
# restartAlgorithm.configFiles = sv-comp14--01-explicitAnalysis-simple.properties, sv-comp14--02-explicitAnalysis.properties, sv-comp14--03-predicateAnalysis.properties, sv-comp14--04-predicateAnalysis-ABElf.properties::if-interrupted, sv-comp14--05-predicateAnalysis-bitprecise.properties

# The used analysis.
#include sv-comp14--01-explicitAnalysis-simple.properties

# Disable all output files except the error path.
output.disable=false

# Write counterexample to file (required by competition).
cpa.arg.errorPath.file = ErrorPath.txt

# Disable statistics for memory consumption.
statistics.memory = false

# skip (non-explicit) recursion
analysis.summaryEdges = true
cpa.callstack.skipVoidRecursion=true
cpa.callstack.skipFunctionPointerRecursion=true

# This is the configuration used when verifying memory safety properties
# (everything in this file is then ignored).
memorysafety.config = sv-comp14--memorysafety.properties




# Do not check counterexamples.
analysis.checkCounterexamples = false




 
tiger.fqlQuery =COVER "EDGES(ID)*".EDGES(SETMINUS(@BASICBLOCKENTRY, UNION(@FUNC(cleanup), @FUNC(select_features), @FUNC(select_helpers), @FUNC(valid_product), @FUNC(setup), @FUNC(select_one), @FUNC(setup), @FUNC(main))))."EDGES(ID)*"

# Additional resource limits.
# limits.time.cpu = 10800s
limits.time.cpu = 3600s
# limits.time.cpu = 900s

tiger.limitsPerGoal.time.cpu = 20
# tiger.limitsPerGoal.time.cpu = 5
tiger.limitsPerGoal.time.cpu.increment = 20
# tiger.limitsPerGoal.time.cpu.increment = 5

tiger.timeoutStrategy = RETRY_AFTER_TIMEOUT
# tiger.inverseOrder = false
# tiger.useOrder = false

