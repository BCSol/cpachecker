#include tiger.properties

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.value.ValueAnalysisCPA, cpa.conditions.path.PathConditionsCPA, cpa.predicate.PredicateCPA, cpa.bdd.BDDCPA
# featBDD, cpa.bdd.BDDCPA varCPA

# drop variables from abstract state once they have more then 22 distinct assignments along the current path
cpa.conditions.path.condition                 = AssignmentsInPathCondition
cpa.conditions.path.assignments.softThreshold = 0
cpa.conditions.path.assignments.hardThreshold = 12

# we handle only boolean variables and variables, 
# that are only compared for equality, with BDDCPA
# featBDD.bdd.trackBoolean  = false
# featBDD.bdd.trackIntEqual = false
# featBDD.bdd.trackIntAdd   = false
# featBDD.bdd.forceTrackingPattern = __SELECTED_FEATURE_(\w)*
cpa.bdd.trackBoolean  = false
cpa.bdd.trackIntEqual = false
cpa.bdd.trackIntAdd   = false
cpa.bdd.forceTrackingPattern = __SELECTED_FEATURE_(\w)*

# varCPA.bdd.trackBoolean  = false
# varCPA.bdd.trackIntEqual = false
# varCPA.bdd.trackIntAdd   = false
# varCPA.bdd.forceTrackingPattern = __SELECTED_FEATURE_(\w)*

# we must exclude those vars from ValueAnalysisCPA
cpa.value.precision.ignoreBoolean  = false
cpa.value.precision.ignoreIntEqual = false
cpa.value.precision.ignoreIntAdd   = false
cpa.value.variableBlacklist = (\w)*__SELECTED_FEATURE_(\w)*

# use refinement and define the refiner to use
# analysis.algorithm.CEGAR               = true
# cegar.refiner                          = cpa.value.refiner.ValueAnalysisDelegatingRefiner
# cpa.composite.precAdjust               = COMPONENT

# HIERMIT EXPERIMENTIEREN
# CBMC is used to cross-check counterexamples
analysis.checkCounterexamples = false
# Enable MultiEdges, this gives a little bit of performance.
cfa.useMultiEdges             = false
# Table size should be very high!!
bdd.initBddNodeTableSize=100000000
# bdd.initBddNodeTableSize=1000000
bdd.bddCacheSize=500000
tiger.algorithmConfigurationFile =tiger-internal-algorithm---pred-refiner.properties
# tiger.algorithmConfigurationFile =tiger-internal-algorithm---no-refiner.properties

limits.time.cpu = 3600s
tiger.limitsPerGoal.time.cpu = 900
tiger.limitsPerGoal.time.cpu.increment = 10

# Options for different strategies
tiger.checkCoverage =false
tiger.reuseARG=false

# BB2
# include FASE-bb2.properties
