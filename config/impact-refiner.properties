# --------------------------------------------------------------------------
# This configuration file uses the Adjustable-Block Encoding CPA
# for predicate analysis with CEGAR.
# "Predicate Abstraction with Adjustable-Block Encoding" (Beyer et al.).
# It is configured for abstractions at loop heads, similar to LBE but
# with function inlining.
# Abstractions are stored as formulas (not as BDDs) and the refinement
# process is the one from the tool Impact from McMillan,
# which was presented in the paper "Lazy Abstraction with Interpolants"
# THIS IS STILL EXPERIMENTAL
# --------------------------------------------------------------------------

# topsort is better than dfs if elements may be merged
# callstack is necessary for inlining to work well
analysis.traversal.order = bfs
analysis.traversal.useTopsort = true
analysis.traversal.useCallstack = true

analysis.useRefinement = true

cegar.refiner = cpa.predicate.ImpactRefiner

# ARTCPA is necessary for refinement and has to be the top-level CPA
cpa = cpa.art.ARTCPA

ARTCPA.cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.predicate.PredicateCPA

# this automaton defines which locations are the error locations
specification = config/specification/default.spc

# ImpactRefiner depends on this
cpa.art.keepCoveredStatesInReached = true
cpa.predicate.abstraction.type = FORMULA

cpa.predicate.blk.alwaysAtFunctions = false
cpa.predicate.blk.alwaysAtLoops     = true
