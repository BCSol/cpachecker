# new sequential properties file

analysis.algorithm.CEGAR = true
analysis.traversal.order = bfs
# analysis.checkCounterexamples = true
# analysis.traversal.useCallstack = true


cpa.predicate.blk.alwaysAtFunctions = true
cpa.predicate.blk.alwaysAtLoops = true
cpa.predicate.maxPreFilledAllocationSize = 0
cpa.predicate.memoryAllocationsAlwaysSucceed = true
cpa.predicate.refinement.performInitialStaticRefinement = true



ARGCPA.cpa = cpa.composite.CompositeCPA


cegar.refiner = cpa.predicate.PredicateRefiner
# cpa.predicate.blk.threshold = 1
cpa.predicate.useParameterVariables = true

cfa.sequencing=true

# cfa.useMultiEdges = true


CompositeCPA.cpas = cpa.location.LocationCPA, cpa.predicate.PredicateCPA, cpa.callstack.MultiCallstackCPA, cpa.context.ContextSwitchCPA, cpa.functionpointer.FunctionPointerCPA
# , cpa.functionpointer.FunctionPointerCPA
# , cpa.callstack.MultiCallstackCPA
# , cpa.predicate.PredicateCPA
# , cpa.value.ValueAnalysisCPA

# counterexample.checker = CPACHECKER
cpa = cpa.arg.ARGCPA
specification = specification/default.spc