cpa = cpa.summary.SummaryCPA
SummaryCPA.cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA
CompositeCPA.cpas = cpa.location.LocationCPA, \
                    cpa.policyiteration.PolicyCPA

# In order to allow the first recursive call,
# *after* which the summary generation kicks in.
cpa.callstack.depth = 1

parser.usePreprocessor=true
cfa.findLiveVariables=true

specification = ../../../../../../../config/specification/default.spc

counterexample.export.enabled=false

[cpa.predicate]
ignoreIrrelevantVariables = false

[solver]
solver = z3
z3.requireProofs = false

[liveVar]
evaluationStrategy=FUNCTION_WISE

[cpa.lpi]
displayFormulasInDotOutput=true

[precision.template]
generateDifferences=true
varFiltering=summary_based
generateFromAsserts=false

[analysis.traversal]
order = dfs
useCallstack = true
useReversePostorder = true
useLoopstack = true
